{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barni\\\\OneDrive\\\\Desktop\\\\dashboard\\\\analytics-dashboard-assessment\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Bar, Line, Pie, Doughnut, Scatter } from 'react-chartjs-2';\nimport Papa from 'papaparse';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  var _chartData$stationDat, _chartData$stationDat2, _chartData$stationDat3, _chartData$stationDat4, _chartData$stationDat5, _chartData$stationDat6, _chartData$stationDat7, _chartData$stationDat8;\n  const [currentSection, setCurrentSection] = useState('dashboard');\n  const [chartData, setChartData] = useState({\n    vehicleData: null,\n    energyData: null,\n    stationData: null,\n    usageData: null\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [dashboardMetrics, setDashboardMetrics] = useState({\n    totalVehicleCount: 0,\n    avgRange: 0,\n    uniqueMakesCount: 0,\n    bevCount: 0,\n    phevCount: 0\n  });\n  useEffect(() => {\n    // Load and parse the CSV file\n    const loadCSVData = async () => {\n      try {\n        const response = await fetch('/data-to-visualize/Electric_Vehicle_Population_Data.csv');\n        const csvData = await response.text();\n        Papa.parse(csvData, {\n          header: true,\n          complete: results => {\n            const data = results.data.filter(row => Object.keys(row).length > 1); // Filter out empty rows\n            processData(data);\n          },\n          error: error => {\n            console.error('Error parsing CSV:', error);\n            setIsLoading(false);\n          }\n        });\n      } catch (error) {\n        console.error('Error fetching CSV:', error);\n        setIsLoading(false);\n      }\n    };\n    const processData = data => {\n      // Process vehicle registration by year\n      const vehiclesByYear = {};\n      data.forEach(row => {\n        const year = row['Model Year'];\n        if (year && !isNaN(year)) {\n          vehiclesByYear[year] = (vehiclesByYear[year] || 0) + 1;\n        }\n      });\n\n      // Sort years and get counts\n      const sortedYears = Object.keys(vehiclesByYear).sort();\n      const vehicleCounts = sortedYears.map(year => vehiclesByYear[year]);\n\n      // Process energy consumption (using Electric Range as proxy)\n      const energyByYear = {};\n      let totalVehicles = 0;\n      data.forEach(row => {\n        const year = row['Model Year'];\n        const range = parseFloat(row['Electric Range']);\n        if (year && !isNaN(year) && !isNaN(range)) {\n          if (!energyByYear[year]) {\n            energyByYear[year] = {\n              total: 0,\n              count: 0\n            };\n          }\n          energyByYear[year].total += range;\n          energyByYear[year].count += 1;\n          totalVehicles += 1;\n        }\n      });\n\n      // Calculate average energy consumption by year\n      const avgEnergyByYear = {};\n      Object.keys(energyByYear).forEach(year => {\n        avgEnergyByYear[year] = energyByYear[year].total / energyByYear[year].count;\n      });\n      const sortedEnergyYears = Object.keys(avgEnergyByYear).sort();\n      const avgEnergyCounts = sortedEnergyYears.map(year => avgEnergyByYear[year]);\n\n      // Process charging station distribution by county\n      const stationsByCounty = {};\n      data.forEach(row => {\n        const county = row['County'];\n        if (county) {\n          stationsByCounty[county] = (stationsByCounty[county] || 0) + 1;\n        }\n      });\n\n      // Get top 5 counties\n      const topCounties = Object.keys(stationsByCounty).sort((a, b) => stationsByCounty[b] - stationsByCounty[a]).slice(0, 5);\n      const countyData = topCounties.map(county => stationsByCounty[county]);\n\n      // Process usage by vehicle type\n      const usageByType = {};\n      data.forEach(row => {\n        const type = row['Electric Vehicle Type'];\n        if (type) {\n          usageByType[type] = (usageByType[type] || 0) + 1;\n        }\n      });\n      const vehicleTypes = Object.keys(usageByType);\n      const typeCounts = vehicleTypes.map(type => usageByType[type]);\n\n      // Calculate metrics for dashboard cards\n      const totalVehicleCount = data.length;\n\n      // Calculate average electric range\n      let totalRange = 0;\n      let rangeCount = 0;\n      data.forEach(row => {\n        const range = parseFloat(row['Electric Range']);\n        if (!isNaN(range) && range > 0) {\n          totalRange += range;\n          rangeCount++;\n        }\n      });\n      const avgRange = rangeCount > 0 ? Math.round(totalRange / rangeCount) : 0;\n\n      // Count unique makes\n      const uniqueMakes = new Set();\n      data.forEach(row => {\n        if (row['Make']) {\n          uniqueMakes.add(row['Make']);\n        }\n      });\n\n      // Count BEVs vs PHEVs\n      let bevCount = 0;\n      let phevCount = 0;\n      data.forEach(row => {\n        if (row['Electric Vehicle Type'] && row['Electric Vehicle Type'].includes('BEV')) {\n          bevCount++;\n        } else if (row['Electric Vehicle Type'] && row['Electric Vehicle Type'].includes('PHEV')) {\n          phevCount++;\n        }\n      });\n\n      // Set dashboard metrics\n      setDashboardMetrics({\n        totalVehicleCount,\n        avgRange,\n        uniqueMakesCount: uniqueMakes.size,\n        bevCount,\n        phevCount\n      });\n\n      // Process data for scatter plot (Year vs Range)\n      const scatterData = [];\n      data.forEach(row => {\n        const year = parseInt(row['Model Year']);\n        const range = parseFloat(row['Electric Range']);\n        if (!isNaN(year) && !isNaN(range) && range > 0) {\n          // Add some jitter to avoid perfect overlapping points\n          const jitter = Math.random() * 0.5 - 0.25;\n          scatterData.push({\n            x: year + jitter,\n            y: range\n          });\n        }\n      });\n\n      // Set chart data\n      setChartData({\n        vehicleData: {\n          labels: sortedYears,\n          datasets: [{\n            label: 'Total Vehicles',\n            data: vehicleCounts,\n            backgroundColor: 'rgba(54, 162, 235, 0.5)',\n            borderColor: 'rgb(54, 162, 235)',\n            borderWidth: 1\n          }]\n        },\n        energyData: {\n          labels: sortedEnergyYears,\n          datasets: [{\n            label: 'Average Electric Range (miles)',\n            data: avgEnergyCounts,\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            borderColor: 'rgb(255, 99, 132)',\n            borderWidth: 2,\n            tension: 0.3,\n            fill: true\n          }]\n        },\n        stationData: {\n          labels: topCounties,\n          datasets: [{\n            label: 'Vehicle Distribution by County',\n            data: countyData,\n            backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)'],\n            borderColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 206, 86)', 'rgb(75, 192, 192)', 'rgb(153, 102, 255)'],\n            borderWidth: 1\n          }]\n        },\n        usageData: {\n          labels: vehicleTypes,\n          datasets: [{\n            label: 'Vehicles by Type',\n            data: typeCounts,\n            backgroundColor: 'rgba(75, 192, 192, 0.5)',\n            borderColor: 'rgb(75, 192, 192)',\n            borderWidth: 1\n          }]\n        },\n        scatterData: {\n          datasets: [{\n            label: 'Electric Range by Model Year',\n            data: scatterData,\n            backgroundColor: 'rgba(75, 192, 192, 0.6)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            pointRadius: 4,\n            pointHoverRadius: 7\n          }]\n        }\n      });\n      setIsLoading(false);\n    };\n    loadCSVData();\n  }, []);\n  const barOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Vehicle Registration by Year'\n      }\n    }\n  };\n  const lineOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Average Electric Range by Year'\n      }\n    }\n  };\n  const pieOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'right'\n      },\n      title: {\n        display: true,\n        text: 'Vehicle Distribution by County'\n      }\n    }\n  };\n  const hourlyOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Vehicles by Type'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Count'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Vehicle Type'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-brand\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"EV Analytics Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"dashboard\",\n        className: \"dashboard-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"EV Analytics Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\",\n          children: \"Loading data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard-grid single-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Total Vehicles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metric\",\n                children: dashboardMetrics.totalVehicleCount.toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"trend positive\",\n                children: [\"From \", dashboardMetrics.totalVehicleCount, \" records\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Average Electric Range\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metric\",\n                children: [dashboardMetrics.avgRange, \" miles\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"trend neutral\",\n                children: \"Based on available data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Unique Manufacturers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metric\",\n                children: dashboardMetrics.uniqueMakesCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"trend positive\",\n                children: \"Different EV makers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"BEV vs PHEV Ratio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metric\",\n                children: [Math.round(dashboardMetrics.bevCount / (dashboardMetrics.bevCount + dashboardMetrics.phevCount) * 100), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"trend neutral\",\n                children: [dashboardMetrics.bevCount, \" BEVs, \", dashboardMetrics.phevCount, \" PHEVs\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-table-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Key EV Metrics Table\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-table-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"data-table\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Metric\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 386,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Value\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 387,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Trend/Notes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 388,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Total EV Population\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 393,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dashboardMetrics.totalVehicleCount.toLocaleString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 394,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Complete dataset records\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 395,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Battery Electric Vehicles (BEVs)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 398,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dashboardMetrics.bevCount.toLocaleString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 399,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [Math.round(dashboardMetrics.bevCount / dashboardMetrics.totalVehicleCount * 100), \"% of total\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 400,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Plug-in Hybrid Vehicles (PHEVs)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 403,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dashboardMetrics.phevCount.toLocaleString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 404,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [Math.round(dashboardMetrics.phevCount / dashboardMetrics.totalVehicleCount * 100), \"% of total\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 405,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Average Electric Range\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 408,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [dashboardMetrics.avgRange, \" miles\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 409,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Across all vehicle types\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 410,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Unique Manufacturers\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 413,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dashboardMetrics.uniqueMakesCount\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 414,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Diverse market participation\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 415,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Top County\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 418,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: ((_chartData$stationDat = chartData.stationData) === null || _chartData$stationDat === void 0 ? void 0 : _chartData$stationDat.labels[0]) || 'N/A'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 419,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [((_chartData$stationDat2 = chartData.stationData) === null || _chartData$stationDat2 === void 0 ? void 0 : (_chartData$stationDat3 = _chartData$stationDat2.datasets[0]) === null || _chartData$stationDat3 === void 0 ? void 0 : (_chartData$stationDat4 = _chartData$stationDat3.data[0]) === null || _chartData$stationDat4 === void 0 ? void 0 : _chartData$stationDat4.toLocaleString()) || 0, \" vehicles\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 420,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Second County\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 423,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: ((_chartData$stationDat5 = chartData.stationData) === null || _chartData$stationDat5 === void 0 ? void 0 : _chartData$stationDat5.labels[1]) || 'N/A'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 424,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [((_chartData$stationDat6 = chartData.stationData) === null || _chartData$stationDat6 === void 0 ? void 0 : (_chartData$stationDat7 = _chartData$stationDat6.datasets[0]) === null || _chartData$stationDat7 === void 0 ? void 0 : (_chartData$stationDat8 = _chartData$stationDat7.data[1]) === null || _chartData$stationDat8 === void 0 ? void 0 : _chartData$stationDat8.toLocaleString()) || 0, \" vehicles\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 425,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"BEV to PHEV Ratio\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 428,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: (dashboardMetrics.bevCount / dashboardMetrics.phevCount).toFixed(2)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 429,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"BEVs per PHEV\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 430,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 427,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"charts-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-wrapper half-width\",\n                children: [/*#__PURE__*/_jsxDEV(Bar, {\n                  data: chartData.vehicleData,\n                  options: barOptions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"chart-description\",\n                  children: \"Vehicle registrations by model year show the growth trend of electric vehicles over time, with newer models becoming increasingly popular.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-wrapper half-width\",\n                children: [/*#__PURE__*/_jsxDEV(Line, {\n                  data: chartData.energyData,\n                  options: lineOptions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"chart-description\",\n                  children: \"Average electric range has been steadily increasing over the years, demonstrating improvements in battery technology and addressing range anxiety concerns.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(Scatter, {\n                data: chartData.scatterData,\n                options: scatterOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"chart-description\",\n                children: \"This scatter plot shows the relationship between model year and electric range, highlighting how newer EV models tend to offer improved range capabilities.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-wrapper small-chart pie-chart-container\",\n                children: [/*#__PURE__*/_jsxDEV(Pie, {\n                  data: chartData.stationData,\n                  options: {\n                    ...pieOptions,\n                    maintainAspectRatio: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"chart-description\",\n                  children: \"The distribution of electric vehicles across counties shows concentration in urban areas, reflecting charging infrastructure availability and adoption patterns.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-wrapper small-chart doughnut-chart-container\",\n                children: [/*#__PURE__*/_jsxDEV(Doughnut, {\n                  data: chartData.stationData,\n                  options: {\n                    ...pieOptions,\n                    maintainAspectRatio: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"chart-description\",\n                  children: \"County distribution highlights potential areas for infrastructure expansion to support growing EV adoption in less represented regions.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(Bar, {\n                data: chartData.usageData,\n                options: hourlyOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"chart-description\",\n                children: \"The breakdown by vehicle type shows the market share between battery electric vehicles (BEVs) and plug-in hybrid electric vehicles (PHEVs), indicating consumer preferences.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\xA9 2025 EV Analytics Dashboard. All rights reserved.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer-links\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#privacy\",\n            children: \"Privacy Policy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#terms\",\n            children: \"Terms of Service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#contact\",\n            children: \"Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 338,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VHa4AreATOkU7Bh7CS4QXZufXYc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Bar","Line","Pie","Doughnut","Scatter","Papa","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","register","App","_s","_chartData$stationDat","_chartData$stationDat2","_chartData$stationDat3","_chartData$stationDat4","_chartData$stationDat5","_chartData$stationDat6","_chartData$stationDat7","_chartData$stationDat8","currentSection","setCurrentSection","chartData","setChartData","vehicleData","energyData","stationData","usageData","isLoading","setIsLoading","dashboardMetrics","setDashboardMetrics","totalVehicleCount","avgRange","uniqueMakesCount","bevCount","phevCount","loadCSVData","response","fetch","csvData","text","parse","header","complete","results","data","filter","row","Object","keys","length","processData","error","console","vehiclesByYear","forEach","year","isNaN","sortedYears","sort","vehicleCounts","map","energyByYear","totalVehicles","range","parseFloat","total","count","avgEnergyByYear","sortedEnergyYears","avgEnergyCounts","stationsByCounty","county","topCounties","a","b","slice","countyData","usageByType","type","vehicleTypes","typeCounts","totalRange","rangeCount","Math","round","uniqueMakes","Set","add","includes","size","scatterData","parseInt","jitter","random","push","x","y","labels","datasets","label","backgroundColor","borderColor","borderWidth","tension","fill","pointRadius","pointHoverRadius","barOptions","responsive","plugins","legend","position","title","display","lineOptions","pieOptions","hourlyOptions","scales","beginAtZero","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","toLocaleString","toFixed","options","scatterOptions","maintainAspectRatio","href","_c","$RefreshReg$"],"sources":["C:/Users/barni/OneDrive/Desktop/dashboard/analytics-dashboard-assessment/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { Bar, Line, Pie, Doughnut, Scatter } from 'react-chartjs-2';\r\nimport Papa from 'papaparse';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nfunction App() {\r\n  const [currentSection, setCurrentSection] = useState('dashboard');\r\n  const [chartData, setChartData] = useState({\r\n    vehicleData: null,\r\n    energyData: null,\r\n    stationData: null,\r\n    usageData: null\r\n  });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [dashboardMetrics, setDashboardMetrics] = useState({\r\n    totalVehicleCount: 0,\r\n    avgRange: 0,\r\n    uniqueMakesCount: 0,\r\n    bevCount: 0,\r\n    phevCount: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Load and parse the CSV file\r\n    const loadCSVData = async () => {\r\n      try {\r\n        const response = await fetch('/data-to-visualize/Electric_Vehicle_Population_Data.csv');\r\n        const csvData = await response.text();\r\n        \r\n        Papa.parse(csvData, {\r\n          header: true,\r\n          complete: (results) => {\r\n            const data = results.data.filter(row => Object.keys(row).length > 1); // Filter out empty rows\r\n            processData(data);\r\n          },\r\n          error: (error) => {\r\n            console.error('Error parsing CSV:', error);\r\n            setIsLoading(false);\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('Error fetching CSV:', error);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    const processData = (data) => {\r\n      // Process vehicle registration by year\r\n      const vehiclesByYear = {};\r\n      data.forEach(row => {\r\n        const year = row['Model Year'];\r\n        if (year && !isNaN(year)) {\r\n          vehiclesByYear[year] = (vehiclesByYear[year] || 0) + 1;\r\n        }\r\n      });\r\n      \r\n      // Sort years and get counts\r\n      const sortedYears = Object.keys(vehiclesByYear).sort();\r\n      const vehicleCounts = sortedYears.map(year => vehiclesByYear[year]);\r\n      \r\n      // Process energy consumption (using Electric Range as proxy)\r\n      const energyByYear = {};\r\n      let totalVehicles = 0;\r\n      data.forEach(row => {\r\n        const year = row['Model Year'];\r\n        const range = parseFloat(row['Electric Range']);\r\n        if (year && !isNaN(year) && !isNaN(range)) {\r\n          if (!energyByYear[year]) {\r\n            energyByYear[year] = { total: 0, count: 0 };\r\n          }\r\n          energyByYear[year].total += range;\r\n          energyByYear[year].count += 1;\r\n          totalVehicles += 1;\r\n        }\r\n      });\r\n      \r\n      // Calculate average energy consumption by year\r\n      const avgEnergyByYear = {};\r\n      Object.keys(energyByYear).forEach(year => {\r\n        avgEnergyByYear[year] = energyByYear[year].total / energyByYear[year].count;\r\n      });\r\n      \r\n      const sortedEnergyYears = Object.keys(avgEnergyByYear).sort();\r\n      const avgEnergyCounts = sortedEnergyYears.map(year => avgEnergyByYear[year]);\r\n      \r\n      // Process charging station distribution by county\r\n      const stationsByCounty = {};\r\n      data.forEach(row => {\r\n        const county = row['County'];\r\n        if (county) {\r\n          stationsByCounty[county] = (stationsByCounty[county] || 0) + 1;\r\n        }\r\n      });\r\n      \r\n      // Get top 5 counties\r\n      const topCounties = Object.keys(stationsByCounty)\r\n        .sort((a, b) => stationsByCounty[b] - stationsByCounty[a])\r\n        .slice(0, 5);\r\n      \r\n      const countyData = topCounties.map(county => stationsByCounty[county]);\r\n      \r\n      // Process usage by vehicle type\r\n      const usageByType = {};\r\n      data.forEach(row => {\r\n        const type = row['Electric Vehicle Type'];\r\n        if (type) {\r\n          usageByType[type] = (usageByType[type] || 0) + 1;\r\n        }\r\n      });\r\n      \r\n      const vehicleTypes = Object.keys(usageByType);\r\n      const typeCounts = vehicleTypes.map(type => usageByType[type]);\r\n      \r\n      // Calculate metrics for dashboard cards\r\n      const totalVehicleCount = data.length;\r\n      \r\n      // Calculate average electric range\r\n      let totalRange = 0;\r\n      let rangeCount = 0;\r\n      data.forEach(row => {\r\n        const range = parseFloat(row['Electric Range']);\r\n        if (!isNaN(range) && range > 0) {\r\n          totalRange += range;\r\n          rangeCount++;\r\n        }\r\n      });\r\n      const avgRange = rangeCount > 0 ? Math.round(totalRange / rangeCount) : 0;\r\n      \r\n      // Count unique makes\r\n      const uniqueMakes = new Set();\r\n      data.forEach(row => {\r\n        if (row['Make']) {\r\n          uniqueMakes.add(row['Make']);\r\n        }\r\n      });\r\n      \r\n      // Count BEVs vs PHEVs\r\n      let bevCount = 0;\r\n      let phevCount = 0;\r\n      data.forEach(row => {\r\n        if (row['Electric Vehicle Type'] && row['Electric Vehicle Type'].includes('BEV')) {\r\n          bevCount++;\r\n        } else if (row['Electric Vehicle Type'] && row['Electric Vehicle Type'].includes('PHEV')) {\r\n          phevCount++;\r\n        }\r\n      });\r\n      \r\n      // Set dashboard metrics\r\n      setDashboardMetrics({\r\n        totalVehicleCount,\r\n        avgRange,\r\n        uniqueMakesCount: uniqueMakes.size,\r\n        bevCount,\r\n        phevCount\r\n      });\r\n      \r\n      // Process data for scatter plot (Year vs Range)\r\n      const scatterData = [];\r\n      data.forEach(row => {\r\n        const year = parseInt(row['Model Year']);\r\n        const range = parseFloat(row['Electric Range']);\r\n        if (!isNaN(year) && !isNaN(range) && range > 0) {\r\n          // Add some jitter to avoid perfect overlapping points\r\n          const jitter = Math.random() * 0.5 - 0.25;\r\n          scatterData.push({\r\n            x: year + jitter,\r\n            y: range\r\n          });\r\n        }\r\n      });\r\n      \r\n      // Set chart data\r\n      setChartData({\r\n        vehicleData: {\r\n          labels: sortedYears,\r\n          datasets: [{\r\n            label: 'Total Vehicles',\r\n            data: vehicleCounts,\r\n            backgroundColor: 'rgba(54, 162, 235, 0.5)',\r\n            borderColor: 'rgb(54, 162, 235)',\r\n            borderWidth: 1\r\n          }]\r\n        },\r\n        energyData: {\r\n          labels: sortedEnergyYears,\r\n          datasets: [{\r\n            label: 'Average Electric Range (miles)',\r\n            data: avgEnergyCounts,\r\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n            borderColor: 'rgb(255, 99, 132)',\r\n            borderWidth: 2,\r\n            tension: 0.3,\r\n            fill: true\r\n          }]\r\n        },\r\n        stationData: {\r\n          labels: topCounties,\r\n          datasets: [{\r\n            label: 'Vehicle Distribution by County',\r\n            data: countyData,\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.6)',\r\n              'rgba(54, 162, 235, 0.6)',\r\n              'rgba(255, 206, 86, 0.6)',\r\n              'rgba(75, 192, 192, 0.6)',\r\n              'rgba(153, 102, 255, 0.6)',\r\n            ],\r\n            borderColor: [\r\n              'rgb(255, 99, 132)',\r\n              'rgb(54, 162, 235)',\r\n              'rgb(255, 206, 86)',\r\n              'rgb(75, 192, 192)',\r\n              'rgb(153, 102, 255)',\r\n            ],\r\n            borderWidth: 1\r\n          }]\r\n        },\r\n        usageData: {\r\n          labels: vehicleTypes,\r\n          datasets: [{\r\n            label: 'Vehicles by Type',\r\n            data: typeCounts,\r\n            backgroundColor: 'rgba(75, 192, 192, 0.5)',\r\n            borderColor: 'rgb(75, 192, 192)',\r\n            borderWidth: 1\r\n          }]\r\n        },\r\n        scatterData: {\r\n          datasets: [{\r\n            label: 'Electric Range by Model Year',\r\n            data: scatterData,\r\n            backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n            borderColor: 'rgba(75, 192, 192, 1)',\r\n            pointRadius: 4,\r\n            pointHoverRadius: 7,\r\n          }]\r\n        }\r\n      });\r\n      \r\n      setIsLoading(false);\r\n    };\r\n    \r\n    loadCSVData();\r\n  }, []);\r\n\r\n  const barOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Vehicle Registration by Year',\r\n      },\r\n    },\r\n  };\r\n\r\n  const lineOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Average Electric Range by Year',\r\n      },\r\n    },\r\n  };\r\n  \r\n  const pieOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'right',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Vehicle Distribution by County',\r\n      },\r\n    },\r\n  };\r\n\r\n  const hourlyOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Vehicles by Type',\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Count'\r\n        }\r\n      },\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: 'Vehicle Type'\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <nav className=\"navbar\">\r\n        <div className=\"navbar-brand\">\r\n          <h1>EV Analytics Dashboard</h1>\r\n        </div>\r\n        \r\n\r\n      </nav>\r\n      \r\n      <main className=\"content\">\r\n        <section id=\"dashboard\" className=\"dashboard-container\">\r\n          <h2>EV Analytics Overview</h2>\r\n          \r\n          {isLoading ? (\r\n            <div className=\"loading-spinner\">Loading data...</div>\r\n          ) : (\r\n            <>\r\n              <div className=\"dashboard-grid single-row\">\r\n                <div className=\"dashboard-card\">\r\n                  <h3>Total Vehicles</h3>\r\n                  <p className=\"metric\">{dashboardMetrics.totalVehicleCount.toLocaleString()}</p>\r\n                  <p className=\"trend positive\">From {dashboardMetrics.totalVehicleCount} records</p>\r\n                </div>\r\n                <div className=\"dashboard-card\">\r\n                  <h3>Average Electric Range</h3>\r\n                  <p className=\"metric\">{dashboardMetrics.avgRange} miles</p>\r\n                  <p className=\"trend neutral\">Based on available data</p>\r\n                </div>\r\n                <div className=\"dashboard-card\">\r\n                  <h3>Unique Manufacturers</h3>\r\n                  <p className=\"metric\">{dashboardMetrics.uniqueMakesCount}</p>\r\n                  <p className=\"trend positive\">Different EV makers</p>\r\n                </div>\r\n                <div className=\"dashboard-card\">\r\n                  <h3>BEV vs PHEV Ratio</h3>\r\n                  <p className=\"metric\">\r\n                    {Math.round((dashboardMetrics.bevCount / (dashboardMetrics.bevCount + dashboardMetrics.phevCount)) * 100)}%\r\n                  </p>\r\n                  <p className=\"trend neutral\">{dashboardMetrics.bevCount} BEVs, {dashboardMetrics.phevCount} PHEVs</p>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"data-table-container\">\r\n                <h3>Key EV Metrics Table</h3>\r\n                <div className=\"data-table-wrapper\">\r\n                  <table className=\"data-table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Metric</th>\r\n                        <th>Value</th>\r\n                        <th>Trend/Notes</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>Total EV Population</td>\r\n                        <td>{dashboardMetrics.totalVehicleCount.toLocaleString()}</td>\r\n                        <td>Complete dataset records</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Battery Electric Vehicles (BEVs)</td>\r\n                        <td>{dashboardMetrics.bevCount.toLocaleString()}</td>\r\n                        <td>{Math.round((dashboardMetrics.bevCount / dashboardMetrics.totalVehicleCount) * 100)}% of total</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Plug-in Hybrid Vehicles (PHEVs)</td>\r\n                        <td>{dashboardMetrics.phevCount.toLocaleString()}</td>\r\n                        <td>{Math.round((dashboardMetrics.phevCount / dashboardMetrics.totalVehicleCount) * 100)}% of total</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Average Electric Range</td>\r\n                        <td>{dashboardMetrics.avgRange} miles</td>\r\n                        <td>Across all vehicle types</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Unique Manufacturers</td>\r\n                        <td>{dashboardMetrics.uniqueMakesCount}</td>\r\n                        <td>Diverse market participation</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Top County</td>\r\n                        <td>{chartData.stationData?.labels[0] || 'N/A'}</td>\r\n                        <td>{chartData.stationData?.datasets[0]?.data[0]?.toLocaleString() || 0} vehicles</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Second County</td>\r\n                        <td>{chartData.stationData?.labels[1] || 'N/A'}</td>\r\n                        <td>{chartData.stationData?.datasets[0]?.data[1]?.toLocaleString() || 0} vehicles</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>BEV to PHEV Ratio</td>\r\n                        <td>{(dashboardMetrics.bevCount / dashboardMetrics.phevCount).toFixed(2)}</td>\r\n                        <td>BEVs per PHEV</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"charts-container\">\r\n                <div className=\"chart-row\">\r\n                  <div className=\"chart-wrapper half-width\">\r\n                    <Bar data={chartData.vehicleData} options={barOptions} />\r\n                    <p className=\"chart-description\">Vehicle registrations by model year show the growth trend of electric vehicles over time, with newer models becoming increasingly popular.</p>\r\n                  </div>\r\n                  <div className=\"chart-wrapper half-width\">\r\n                    <Line data={chartData.energyData} options={lineOptions} />\r\n                    <p className=\"chart-description\">Average electric range has been steadily increasing over the years, demonstrating improvements in battery technology and addressing range anxiety concerns.</p>\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* New Scatter Plot */}\r\n                <div className=\"chart-wrapper\">\r\n                  <Scatter data={chartData.scatterData} options={scatterOptions} />\r\n                  <p className=\"chart-description\">This scatter plot shows the relationship between model year and electric range, highlighting how newer EV models tend to offer improved range capabilities.</p>\r\n                </div>\r\n                \r\n                <div className=\"chart-row\">\r\n                  <div className=\"chart-wrapper small-chart pie-chart-container\">\r\n                    <Pie data={chartData.stationData} options={{...pieOptions, maintainAspectRatio: true}} />\r\n                    <p className=\"chart-description\">The distribution of electric vehicles across counties shows concentration in urban areas, reflecting charging infrastructure availability and adoption patterns.</p>\r\n                  </div>\r\n                  <div className=\"chart-wrapper small-chart doughnut-chart-container\">\r\n                    <Doughnut data={chartData.stationData} options={{...pieOptions, maintainAspectRatio: true}} />\r\n                    <p className=\"chart-description\">County distribution highlights potential areas for infrastructure expansion to support growing EV adoption in less represented regions.</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"chart-wrapper\">\r\n                  <Bar data={chartData.usageData} options={hourlyOptions} />\r\n                  <p className=\"chart-description\">The breakdown by vehicle type shows the market share between battery electric vehicles (BEVs) and plug-in hybrid electric vehicles (PHEVs), indicating consumer preferences.</p>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </section>\r\n      </main>\r\n      \r\n      <footer className=\"footer\">\r\n        <div className=\"footer-content\">\r\n          <p>© 2025 EV Analytics Dashboard. All rights reserved.</p>\r\n          <div className=\"footer-links\">\r\n            <a href=\"#privacy\">Privacy Policy</a>\r\n            <a href=\"#terms\">Terms of Service</a>\r\n            <a href=\"#contact\">Contact</a>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}