{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barni\\\\OneDrive\\\\Desktop\\\\dashboard\\\\analytics-dashboard-assessment\\\\src\\\\App.js\",\n  _s2 = $RefreshSig$();\n// Import additional components for mapping\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Bar, Line, Pie, Doughnut } from 'react-chartjs-2';\nimport Papa from 'papaparse';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend);\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      hasError: true,\n      error\n    };\n  }\n  render() {\n    if (this.state.hasError) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '20px',\n          color: 'red'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Something went wrong.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n          children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n            children: \"Error details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: this.state.error && this.state.error.toString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this);\n    }\n    return this.props.children;\n  }\n}\nfunction App() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [currentSection, setCurrentSection] = useState('dashboard');\n  // Make sure chartData is properly initialized\n  const [chartData, setChartData] = useState({\n    vehicleData: {\n      labels: [],\n      datasets: []\n    },\n    energyData: {\n      labels: [],\n      datasets: []\n    },\n    stationData: {\n      labels: [],\n      datasets: []\n    },\n    makeData: {\n      labels: [],\n      datasets: []\n    },\n    usageData: {\n      labels: [],\n      datasets: []\n    },\n    rangeData: {\n      labels: [],\n      datasets: []\n    }\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [dashboardMetrics, setDashboardMetrics] = useState({\n    totalVehicleCount: 0,\n    avgRange: 0,\n    uniqueMakesCount: 0,\n    bevCount: 0,\n    phevCount: 0\n  });\n  _s(useEffect(_s(() => {\n    _s();\n    const loadCSVData = async () => {\n      try {\n        const response = await fetch('/data-to-visualize/Electric_Vehicle_Population_Data.csv');\n        if (!response.ok) {\n          throw new Error(`Failed to fetch CSV: ${response.status} ${response.statusText}`);\n        }\n        const csvData = await response.text();\n        console.log(\"CSV data loaded, first 100 chars:\", csvData.substring(0, 100));\n        Papa.parse(csvData, {\n          header: true,\n          complete: results => {\n            console.log(\"Parsed data:\", results.data.length, \"rows\");\n            if (results.data.length > 0) {\n              console.log(\"Sample row:\", results.data[0]);\n            }\n            const data = results.data.filter(row => Object.keys(row).length > 1);\n            processData(data);\n          },\n          error: error => {\n            console.error('Error parsing CSV:', error);\n            setIsLoading(false);\n          }\n        });\n      } catch (error) {\n        console.error('Error fetching CSV:', error);\n        setIsLoading(false);\n        generateMockData();\n      }\n    };\n    const processData = data => {\n      console.log(\"Processing\", data.length, \"rows of data\");\n      const vehiclesByYear = {};\n      data.forEach(row => {\n        const year = row['Model Year'];\n        if (year && !isNaN(year)) {\n          vehiclesByYear[year] = (vehiclesByYear[year] || 0) + 1;\n        }\n      });\n      const sortedYears = Object.keys(vehiclesByYear).sort();\n      const vehicleCounts = sortedYears.map(year => vehiclesByYear[year]);\n\n      // Process electric range by year data\n      const rangeByYear = {};\n      let validRangeCount = 0;\n      data.forEach(row => {\n        const year = row['Model Year'];\n        const range = parseFloat(row['Electric Range']);\n        if (year && !isNaN(year) && !isNaN(range) && range > 0) {\n          if (!rangeByYear[year]) {\n            rangeByYear[year] = {\n              total: 0,\n              count: 0\n            };\n          }\n          rangeByYear[year].total += range;\n          rangeByYear[year].count += 1;\n          validRangeCount++;\n        }\n      });\n      const avgRangeByYear = {};\n      Object.keys(rangeByYear).forEach(year => {\n        avgRangeByYear[year] = rangeByYear[year].total / rangeByYear[year].count;\n      });\n      const sortedRangeYears = Object.keys(avgRangeByYear).sort();\n      const avgRangeCounts = sortedRangeYears.map(year => avgRangeByYear[year]);\n\n      // Process CAFV eligibility data\n      const eligibilityStatus = {\n        eligible: 0,\n        notEligible: 0,\n        unknown: 0\n      };\n      data.forEach(row => {\n        const status = row['Clean Alternative Fuel Vehicle (CAFV) Eligibility'];\n        if (status && status.includes('Eligible')) {\n          eligibilityStatus.eligible++;\n        } else if (status && status.includes('Not eligible')) {\n          eligibilityStatus.notEligible++;\n        } else {\n          eligibilityStatus.unknown++;\n        }\n      });\n\n      // Process geographic distribution data\n      const vehiclesByCity = {};\n      data.forEach(row => {\n        const city = row['City'];\n        if (city) {\n          vehiclesByCity[city] = (vehiclesByCity[city] || 0) + 1;\n        }\n      });\n      const topCities = Object.keys(vehiclesByCity).sort((a, b) => vehiclesByCity[b] - vehiclesByCity[a]).slice(0, 10);\n      const cityData = topCities.map(city => vehiclesByCity[city]);\n      const vehiclesByCounty = {};\n      data.forEach(row => {\n        const county = row['County'];\n        if (county) {\n          vehiclesByCounty[county] = (vehiclesByCounty[county] || 0) + 1;\n        }\n      });\n      const topCounties = Object.keys(vehiclesByCounty).sort((a, b) => vehiclesByCounty[b] - vehiclesByCounty[a]).slice(0, 5);\n      const countyData = topCounties.map(county => vehiclesByCounty[county]);\n      const vehiclesByType = {};\n      data.forEach(row => {\n        const type = row['Electric Vehicle Type'];\n        if (type) {\n          vehiclesByType[type] = (vehiclesByType[type] || 0) + 1;\n        }\n      });\n      const vehicleTypes = Object.keys(vehiclesByType);\n      const typeCounts = vehicleTypes.map(type => vehiclesByType[type]);\n      const vehiclesByMake = {};\n      data.forEach(row => {\n        const make = row['Make'];\n        if (make) {\n          vehiclesByMake[make] = (vehiclesByMake[make] || 0) + 1;\n        }\n      });\n      const topMakes = Object.keys(vehiclesByMake).sort((a, b) => vehiclesByMake[b] - vehiclesByMake[a]).slice(0, 5);\n      const makeData = topMakes.map(make => vehiclesByMake[make]);\n      const totalVehicleCount = data.length;\n      let totalRange = 0;\n      let rangeCount = 0;\n      data.forEach(row => {\n        const range = parseFloat(row['Electric Range']);\n        if (!isNaN(range) && range > 0) {\n          totalRange += range;\n          rangeCount++;\n        }\n      });\n      const avgRange = rangeCount > 0 ? Math.round(totalRange / rangeCount) : 0;\n      const uniqueMakes = new Set();\n      data.forEach(row => {\n        if (row['Make']) {\n          uniqueMakes.add(row['Make']);\n        }\n      });\n      let bevCount = 0;\n      let phevCount = 0;\n      data.forEach(row => {\n        if (row['Electric Vehicle Type'] && row['Electric Vehicle Type'].includes('BEV')) {\n          bevCount++;\n        } else if (row['Electric Vehicle Type'] && row['Electric Vehicle Type'].includes('PHEV')) {\n          phevCount++;\n        }\n      });\n      setDashboardMetrics({\n        totalVehicleCount,\n        avgRange,\n        uniqueMakesCount: uniqueMakes.size,\n        bevCount,\n        phevCount\n      });\n      setChartData({\n        vehicleData: {\n          labels: sortedYears,\n          datasets: [{\n            label: 'Vehicles by Model Year',\n            data: vehicleCounts,\n            backgroundColor: 'rgba(54, 162, 235, 0.5)',\n            borderColor: 'rgb(54, 162, 235)',\n            borderWidth: 1\n          }]\n        },\n        energyData: {\n          labels: sortedRangeYears,\n          datasets: [{\n            label: 'Average Electric Range (miles)',\n            data: avgRangeCounts,\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            borderColor: 'rgb(255, 99, 132)',\n            borderWidth: 2,\n            tension: 0.3,\n            fill: true\n          }]\n        },\n        stationData: {\n          labels: topCounties,\n          datasets: [{\n            label: 'Vehicles by County',\n            data: countyData,\n            backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)'],\n            borderColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 206, 86)', 'rgb(75, 192, 192)', 'rgb(153, 102, 255)'],\n            borderWidth: 1\n          }]\n        },\n        makeData: {\n          labels: topMakes,\n          datasets: [{\n            label: 'Vehicles by Manufacturer',\n            data: makeData,\n            backgroundColor: ['rgba(153, 102, 255, 0.6)', 'rgba(255, 159, 64, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(54, 162, 235, 0.6)'],\n            borderColor: ['rgb(153, 102, 255)', 'rgb(255, 159, 64)', 'rgb(75, 192, 192)', 'rgb(255, 206, 86)', 'rgb(54, 162, 235)'],\n            borderWidth: 1\n          }]\n        },\n        usageData: {\n          labels: vehicleTypes,\n          datasets: [{\n            label: 'Vehicles by Type',\n            data: typeCounts,\n            backgroundColor: 'rgba(75, 192, 192, 0.5)',\n            borderColor: 'rgb(75, 192, 192)',\n            borderWidth: 1\n          }]\n        },\n        rangeData: {\n          labels: Object.keys(rangeGroups),\n          datasets: [{\n            label: 'Vehicles by Electric Range (miles)',\n            data: Object.values(rangeGroups),\n            backgroundColor: 'rgba(153, 102, 255, 0.6)',\n            borderColor: 'rgb(153, 102, 255)',\n            borderWidth: 1\n          }]\n        }\n      });\n      setIsLoading(false);\n    };\n\n    // Remove the nested useEffect and fix the loadCSVData function\n    useEffect(() => {\n      const loadCSVData = async () => {\n        try {\n          // Fix the path to your CSV file - make sure this is correct\n          const response = await fetch('/data-to-visualize/Electric_Vehicle_Population_Data.csv');\n          if (!response.ok) {\n            throw new Error(`Failed to fetch CSV: ${response.status} ${response.statusText}`);\n          }\n          const csvData = await response.text();\n          console.log(\"CSV data loaded, first 100 chars:\", csvData.substring(0, 100));\n          Papa.parse(csvData, {\n            header: true,\n            complete: results => {\n              console.log(\"Parsed data:\", results.data.length, \"rows\");\n              if (results.data.length > 0) {\n                console.log(\"Sample row:\", results.data[0]);\n              }\n              const data = results.data.filter(row => Object.keys(row).length > 1);\n              processData(data);\n            },\n            error: error => {\n              console.error('Error parsing CSV:', error);\n              setIsLoading(false);\n            }\n          });\n        } catch (error) {\n          console.error('Error fetching CSV:', error);\n          setIsLoading(false);\n        }\n      };\n      loadCSVData();\n    }, []);\n  }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"), []), \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  const barOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Vehicle Registration by Year'\n      }\n    }\n  };\n  const lineOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Average Electric Range by Year'\n      }\n    }\n  };\n  const pieOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'right'\n      },\n      title: {\n        display: true,\n        text: 'Vehicle Distribution by County'\n      }\n    }\n  };\n  const doughnutOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'right'\n      },\n      title: {\n        display: true,\n        text: 'Top 5 Vehicle Manufacturers'\n      }\n    }\n  };\n  const hourlyOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Vehicles by Type'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Count'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Vehicle Type'\n        }\n      }\n    }\n  };\n  const rangeOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Vehicle Distribution by Electric Range'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Number of Vehicles'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Range (miles)'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-brand\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"EV Analytics Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"navbar-links\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#dashboard\",\n            onClick: () => setCurrentSection('dashboard'),\n            className: currentSection === 'dashboard' ? 'active' : '',\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#analytics\",\n            onClick: () => setCurrentSection('analytics'),\n            className: currentSection === 'analytics' ? 'active' : '',\n            children: \"Analytics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#reports\",\n            onClick: () => setCurrentSection('reports'),\n            className: currentSection === 'reports' ? 'active' : '',\n            children: \"Reports\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#settings\",\n            onClick: () => setCurrentSection('settings'),\n            className: currentSection === 'settings' ? 'active' : '',\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"dashboard\",\n        className: \"dashboard-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"EV Analytics Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\",\n          children: \"Loading data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Total Vehicles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metric\",\n                children: dashboardMetrics.totalVehicleCount.toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"trend positive\",\n                children: [\"From \", dashboardMetrics.totalVehicleCount, \" records\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Average Electric Range\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metric\",\n                children: [dashboardMetrics.avgRange, \" miles\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"trend neutral\",\n                children: \"Based on available data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Unique Manufacturers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metric\",\n                children: dashboardMetrics.uniqueMakesCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"trend positive\",\n                children: \"Different EV makers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"BEV vs PHEV Ratio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metric\",\n                children: [Math.round(dashboardMetrics.bevCount / (dashboardMetrics.bevCount + dashboardMetrics.phevCount) * 100), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"trend neutral\",\n                children: [dashboardMetrics.bevCount, \" BEVs, \", dashboardMetrics.phevCount, \" PHEVs\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"charts-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-wrapper half-width\",\n                children: [/*#__PURE__*/_jsxDEV(Bar, {\n                  data: chartData.vehicleData,\n                  options: barOptions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"chart-description\",\n                  children: \"Vehicle registrations by model year show the growth trend of electric vehicles over time, with newer models becoming increasingly popular.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 530,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-wrapper half-width\",\n                children: [/*#__PURE__*/_jsxDEV(Line, {\n                  data: chartData.energyData,\n                  options: lineOptions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"chart-description\",\n                  children: \"Average electric range has been steadily increasing over the years, demonstrating improvements in battery technology and addressing range anxiety concerns.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-wrapper small-chart\",\n                children: [/*#__PURE__*/_jsxDEV(Pie, {\n                  data: chartData.stationData,\n                  options: {\n                    ...pieOptions,\n                    maintainAspectRatio: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"chart-description\",\n                  children: \"Distribution of electric vehicles across top counties in Washington state, showing regional adoption patterns.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-wrapper small-chart\",\n                children: [/*#__PURE__*/_jsxDEV(Doughnut, {\n                  data: chartData.makeData,\n                  options: {\n                    ...doughnutOptions,\n                    maintainAspectRatio: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"chart-description\",\n                  children: \"Market share of the top 5 electric vehicle manufacturers, highlighting industry leaders.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(Bar, {\n                data: chartData.usageData,\n                options: hourlyOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"chart-description\",\n                children: \"This chart shows the distribution of electric vehicles by type (BEV vs PHEV), highlighting the market share of fully electric versus hybrid vehicles.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-wrapper vehicle-type-chart\",\n              children: [/*#__PURE__*/_jsxDEV(Bar, {\n                data: chartData.rangeData,\n                options: rangeOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"chart-description\",\n                children: \"Distribution of electric vehicles by their electric range capability, showing the most common range categories in the dataset.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\xA9 2025 EV Analytics Dashboard. All rights reserved.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer-links\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#privacy\",\n            children: \"Privacy Policy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#terms\",\n            children: \"Terms of Service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#contact\",\n            children: \"Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 480,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"QZYDPqj7nLYftKphGtQczYTeb/k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Bar","Line","Pie","Doughnut","Papa","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","register","ErrorBoundary","Component","constructor","props","state","hasError","error","getDerivedStateFromError","render","style","padding","color","children","fileName","_jsxFileName","lineNumber","columnNumber","toString","App","_s2","_s","$RefreshSig$","currentSection","setCurrentSection","chartData","setChartData","vehicleData","labels","datasets","energyData","stationData","makeData","usageData","rangeData","isLoading","setIsLoading","dashboardMetrics","setDashboardMetrics","totalVehicleCount","avgRange","uniqueMakesCount","bevCount","phevCount","loadCSVData","response","fetch","ok","Error","status","statusText","csvData","text","console","log","substring","parse","header","complete","results","data","length","filter","row","Object","keys","processData","generateMockData","vehiclesByYear","forEach","year","isNaN","sortedYears","sort","vehicleCounts","map","rangeByYear","validRangeCount","range","parseFloat","total","count","avgRangeByYear","sortedRangeYears","avgRangeCounts","eligibilityStatus","eligible","notEligible","unknown","includes","vehiclesByCity","city","topCities","a","b","slice","cityData","vehiclesByCounty","county","topCounties","countyData","vehiclesByType","type","vehicleTypes","typeCounts","vehiclesByMake","make","topMakes","totalRange","rangeCount","Math","round","uniqueMakes","Set","add","size","label","backgroundColor","borderColor","borderWidth","tension","fill","rangeGroups","values","barOptions","responsive","plugins","legend","position","title","display","lineOptions","pieOptions","doughnutOptions","hourlyOptions","scales","y","beginAtZero","x","rangeOptions","className","href","onClick","id","toLocaleString","options","maintainAspectRatio","_c","$RefreshReg$"],"sources":["C:/Users/barni/OneDrive/Desktop/dashboard/analytics-dashboard-assessment/src/App.js"],"sourcesContent":["// Import additional components for mapping\r\nimport React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { Bar, Line, Pie, Doughnut } from 'react-chartjs-2';\r\nimport Papa from 'papaparse';\r\nimport {Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,BarElement,ArcElement,Title,Tooltip,Legend,\r\n} from 'chart.js';\r\n\r\nChartJS.register(\r\n  CategoryScale,LinearScale,PointElement,LineElement,BarElement,ArcElement,Title,Tooltip,Legend\r\n);\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false, error: null };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div style={{ padding: '20px', color: 'red' }}>\r\n          <h2>Something went wrong.</h2>\r\n          <details>\r\n            <summary>Error details</summary>\r\n            <pre>{this.state.error && this.state.error.toString()}</pre>\r\n          </details>\r\n        </div>\r\n      );\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  const [currentSection, setCurrentSection] = useState('dashboard');\r\n  // Make sure chartData is properly initialized\r\n  const [chartData, setChartData] = useState({\r\n    vehicleData: { labels: [], datasets: [] },\r\n    energyData: { labels: [], datasets: [] },\r\n    stationData: { labels: [], datasets: [] },\r\n    makeData: { labels: [], datasets: [] },\r\n    usageData: { labels: [], datasets: [] },\r\n    rangeData: { labels: [], datasets: [] }\r\n  });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [dashboardMetrics, setDashboardMetrics] = useState({\r\n    totalVehicleCount: 0,\r\n    avgRange: 0,\r\n    uniqueMakesCount: 0,\r\n    bevCount: 0,\r\n    phevCount: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    const loadCSVData = async () => {\r\n      try {\r\n        const response = await fetch('/data-to-visualize/Electric_Vehicle_Population_Data.csv');\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch CSV: ${response.status} ${response.statusText}`);\r\n        }\r\n        const csvData = await response.text();\r\n        console.log(\"CSV data loaded, first 100 chars:\", csvData.substring(0, 100));\r\n        \r\n        Papa.parse(csvData, {\r\n          header: true,\r\n          complete: (results) => {\r\n            console.log(\"Parsed data:\", results.data.length, \"rows\");\r\n            if (results.data.length > 0) {\r\n              console.log(\"Sample row:\", results.data[0]);\r\n            }\r\n            const data = results.data.filter(row => Object.keys(row).length > 1);\r\n            processData(data);\r\n          },\r\n          error: (error) => {\r\n            console.error('Error parsing CSV:', error);\r\n            setIsLoading(false);\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('Error fetching CSV:', error);\r\n        setIsLoading(false);\r\n        generateMockData();\r\n      }\r\n    };\r\n    \r\n\r\n    \r\n    const processData = (data) => {\r\n      console.log(\"Processing\", data.length, \"rows of data\");\r\n      \r\n      const vehiclesByYear = {};\r\n      data.forEach(row => {\r\n        const year = row['Model Year'];\r\n        if (year && !isNaN(year)) {\r\n          vehiclesByYear[year] = (vehiclesByYear[year] || 0) + 1;\r\n        }\r\n      });\r\n      \r\n      const sortedYears = Object.keys(vehiclesByYear).sort();\r\n      const vehicleCounts = sortedYears.map(year => vehiclesByYear[year]);\r\n      \r\n      // Process electric range by year data\r\n      const rangeByYear = {};\r\n      let validRangeCount = 0;\r\n      \r\n      data.forEach(row => {\r\n        const year = row['Model Year'];\r\n        const range = parseFloat(row['Electric Range']);\r\n        if (year && !isNaN(year) && !isNaN(range) && range > 0) {\r\n          if (!rangeByYear[year]) {\r\n            rangeByYear[year] = { total: 0, count: 0 };\r\n          }\r\n          rangeByYear[year].total += range;\r\n          rangeByYear[year].count += 1;\r\n          validRangeCount++;\r\n        }\r\n      });\r\n      \r\n      const avgRangeByYear = {};\r\n      Object.keys(rangeByYear).forEach(year => {\r\n        avgRangeByYear[year] = rangeByYear[year].total / rangeByYear[year].count;\r\n      });\r\n      \r\n      const sortedRangeYears = Object.keys(avgRangeByYear).sort();\r\n      const avgRangeCounts = sortedRangeYears.map(year => avgRangeByYear[year]);\r\n      \r\n      // Process CAFV eligibility data\r\n      const eligibilityStatus = {\r\n        eligible: 0,\r\n        notEligible: 0,\r\n        unknown: 0\r\n      };\r\n      \r\n      data.forEach(row => {\r\n        const status = row['Clean Alternative Fuel Vehicle (CAFV) Eligibility'];\r\n        if (status && status.includes('Eligible')) {\r\n          eligibilityStatus.eligible++;\r\n        } else if (status && status.includes('Not eligible')) {\r\n          eligibilityStatus.notEligible++;\r\n        } else {\r\n          eligibilityStatus.unknown++;\r\n        }\r\n      });\r\n      \r\n      // Process geographic distribution data\r\n      const vehiclesByCity = {};\r\n      data.forEach(row => {\r\n        const city = row['City'];\r\n        if (city) {\r\n          vehiclesByCity[city] = (vehiclesByCity[city] || 0) + 1;\r\n        }\r\n      });\r\n      \r\n      const topCities = Object.keys(vehiclesByCity)\r\n        .sort((a, b) => vehiclesByCity[b] - vehiclesByCity[a])\r\n        .slice(0, 10);\r\n      \r\n      const cityData = topCities.map(city => vehiclesByCity[city]);\r\n      \r\n      const vehiclesByCounty = {};\r\n      data.forEach(row => {\r\n        const county = row['County'];\r\n        if (county) {\r\n          vehiclesByCounty[county] = (vehiclesByCounty[county] || 0) + 1;\r\n        }\r\n      });\r\n      \r\n      const topCounties = Object.keys(vehiclesByCounty)\r\n        .sort((a, b) => vehiclesByCounty[b] - vehiclesByCounty[a])\r\n        .slice(0, 5);\r\n      \r\n      const countyData = topCounties.map(county => vehiclesByCounty[county]);\r\n      \r\n      const vehiclesByType = {};\r\n      data.forEach(row => {\r\n        const type = row['Electric Vehicle Type'];\r\n        if (type) {\r\n          vehiclesByType[type] = (vehiclesByType[type] || 0) + 1;\r\n        }\r\n      });\r\n      \r\n      const vehicleTypes = Object.keys(vehiclesByType);\r\n      const typeCounts = vehicleTypes.map(type => vehiclesByType[type]);\r\n      \r\n      const vehiclesByMake = {};\r\n      data.forEach(row => {\r\n        const make = row['Make'];\r\n        if (make) {\r\n          vehiclesByMake[make] = (vehiclesByMake[make] || 0) + 1;\r\n        }\r\n      });\r\n      \r\n      const topMakes = Object.keys(vehiclesByMake)\r\n        .sort((a, b) => vehiclesByMake[b] - vehiclesByMake[a])\r\n        .slice(0, 5);\r\n      \r\n      const makeData = topMakes.map(make => vehiclesByMake[make]);\r\n      \r\n      const totalVehicleCount = data.length;\r\n      \r\n      let totalRange = 0;\r\n      let rangeCount = 0;\r\n      data.forEach(row => {\r\n        const range = parseFloat(row['Electric Range']);\r\n        if (!isNaN(range) && range > 0) {\r\n          totalRange += range;\r\n          rangeCount++;\r\n        }\r\n      });\r\n      const avgRange = rangeCount > 0 ? Math.round(totalRange / rangeCount) : 0;\r\n      \r\n      const uniqueMakes = new Set();\r\n      data.forEach(row => {\r\n        if (row['Make']) {\r\n          uniqueMakes.add(row['Make']);\r\n        }\r\n      });\r\n      \r\n      let bevCount = 0;\r\n      let phevCount = 0;\r\n      data.forEach(row => {\r\n        if (row['Electric Vehicle Type'] && row['Electric Vehicle Type'].includes('BEV')) {\r\n          bevCount++;\r\n        } else if (row['Electric Vehicle Type'] && row['Electric Vehicle Type'].includes('PHEV')) {\r\n          phevCount++;\r\n        }\r\n      });\r\n      \r\n      setDashboardMetrics({\r\n        totalVehicleCount,\r\n        avgRange,\r\n        uniqueMakesCount: uniqueMakes.size,\r\n        bevCount,\r\n        phevCount\r\n      });\r\n      \r\n      setChartData({\r\n        vehicleData: {\r\n          labels: sortedYears,\r\n          datasets: [{\r\n            label: 'Vehicles by Model Year',\r\n            data: vehicleCounts,\r\n            backgroundColor: 'rgba(54, 162, 235, 0.5)',\r\n            borderColor: 'rgb(54, 162, 235)',\r\n            borderWidth: 1\r\n          }]\r\n        },\r\n        energyData: {\r\n          labels: sortedRangeYears,\r\n          datasets: [{\r\n            label: 'Average Electric Range (miles)',\r\n            data: avgRangeCounts,\r\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n            borderColor: 'rgb(255, 99, 132)',\r\n            borderWidth: 2,\r\n            tension: 0.3,\r\n            fill: true\r\n          }]\r\n        },\r\n        stationData: {\r\n          labels: topCounties,\r\n          datasets: [{\r\n            label: 'Vehicles by County',\r\n            data: countyData,\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.6)',\r\n              'rgba(54, 162, 235, 0.6)',\r\n              'rgba(255, 206, 86, 0.6)',\r\n              'rgba(75, 192, 192, 0.6)',\r\n              'rgba(153, 102, 255, 0.6)',\r\n            ],\r\n            borderColor: [\r\n              'rgb(255, 99, 132)',\r\n              'rgb(54, 162, 235)',\r\n              'rgb(255, 206, 86)',\r\n              'rgb(75, 192, 192)',\r\n              'rgb(153, 102, 255)',\r\n            ],\r\n            borderWidth: 1\r\n          }]\r\n        },\r\n        makeData: {\r\n          labels: topMakes,\r\n          datasets: [{\r\n            label: 'Vehicles by Manufacturer',\r\n            data: makeData,\r\n            backgroundColor: [\r\n              'rgba(153, 102, 255, 0.6)',\r\n              'rgba(255, 159, 64, 0.6)',\r\n              'rgba(75, 192, 192, 0.6)',\r\n              'rgba(255, 206, 86, 0.6)',\r\n              'rgba(54, 162, 235, 0.6)',\r\n            ],\r\n            borderColor: [\r\n              'rgb(153, 102, 255)',\r\n              'rgb(255, 159, 64)',\r\n              'rgb(75, 192, 192)',\r\n              'rgb(255, 206, 86)',\r\n              'rgb(54, 162, 235)',\r\n            ],\r\n            borderWidth: 1\r\n          }]\r\n        },\r\n        usageData: {\r\n          labels: vehicleTypes,\r\n          datasets: [{\r\n            label: 'Vehicles by Type',\r\n            data: typeCounts,\r\n            backgroundColor: 'rgba(75, 192, 192, 0.5)',\r\n            borderColor: 'rgb(75, 192, 192)',\r\n            borderWidth: 1\r\n          }]\r\n        },\r\n        rangeData: {\r\n          labels: Object.keys(rangeGroups),\r\n          datasets: [{\r\n            label: 'Vehicles by Electric Range (miles)',\r\n            data: Object.values(rangeGroups),\r\n            backgroundColor: 'rgba(153, 102, 255, 0.6)',\r\n            borderColor: 'rgb(153, 102, 255)',\r\n            borderWidth: 1\r\n          }]\r\n        }\r\n      });\r\n      \r\n      setIsLoading(false);\r\n    };\r\n    \r\n    // Remove the nested useEffect and fix the loadCSVData function\r\n    useEffect(() => {\r\n      const loadCSVData = async () => {\r\n        try {\r\n          // Fix the path to your CSV file - make sure this is correct\r\n          const response = await fetch('/data-to-visualize/Electric_Vehicle_Population_Data.csv');\r\n          if (!response.ok) {\r\n            throw new Error(`Failed to fetch CSV: ${response.status} ${response.statusText}`);\r\n          }\r\n          const csvData = await response.text();\r\n          console.log(\"CSV data loaded, first 100 chars:\", csvData.substring(0, 100));\r\n          \r\n          Papa.parse(csvData, {\r\n            header: true,\r\n            complete: (results) => {\r\n              console.log(\"Parsed data:\", results.data.length, \"rows\");\r\n              if (results.data.length > 0) {\r\n                console.log(\"Sample row:\", results.data[0]);\r\n              }\r\n              const data = results.data.filter(row => Object.keys(row).length > 1);\r\n              processData(data);\r\n            },\r\n            error: (error) => {\r\n              console.error('Error parsing CSV:', error);\r\n              setIsLoading(false);\r\n            }\r\n          });\r\n        } catch (error) {\r\n          console.error('Error fetching CSV:', error);\r\n          setIsLoading(false);\r\n        }\r\n      };\r\n      \r\n      loadCSVData();\r\n    }, []);\r\n  }, []);\r\n\r\n  const barOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Vehicle Registration by Year',\r\n      },\r\n    },\r\n  };\r\n\r\n  const lineOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Average Electric Range by Year',\r\n      },\r\n    },\r\n  };\r\n  \r\n  const pieOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'right',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Vehicle Distribution by County',\r\n      },\r\n    },\r\n  };\r\n\r\n  const doughnutOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'right',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Top 5 Vehicle Manufacturers',\r\n      },\r\n    },\r\n  };\r\n\r\n  const hourlyOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Vehicles by Type',\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Count'\r\n        }\r\n      },\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: 'Vehicle Type'\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const rangeOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Vehicle Distribution by Electric Range',\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Number of Vehicles'\r\n        }\r\n      },\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: 'Range (miles)'\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <nav className=\"navbar\">\r\n        <div className=\"navbar-brand\">\r\n          <h1>EV Analytics Dashboard</h1>\r\n        </div>\r\n        \r\n        <ul className=\"navbar-links\">\r\n          <li><a href=\"#dashboard\" onClick={() => setCurrentSection('dashboard')} className={currentSection === 'dashboard' ? 'active' : ''}>Dashboard</a></li>\r\n          <li><a href=\"#analytics\" onClick={() => setCurrentSection('analytics')} className={currentSection === 'analytics' ? 'active' : ''}>Analytics</a></li>\r\n          <li><a href=\"#reports\" onClick={() => setCurrentSection('reports')} className={currentSection === 'reports' ? 'active' : ''}>Reports</a></li>\r\n          <li><a href=\"#settings\" onClick={() => setCurrentSection('settings')} className={currentSection === 'settings' ? 'active' : ''}>Settings</a></li>\r\n        </ul>\r\n      </nav>\r\n      \r\n      <main className=\"content\">\r\n        <section id=\"dashboard\" className=\"dashboard-container\">\r\n          <h2>EV Analytics Overview</h2>\r\n          \r\n          {isLoading ? (\r\n            <div className=\"loading-spinner\">Loading data...</div>\r\n          ) : (\r\n            <>\r\n              <div className=\"dashboard-grid\">\r\n                <div className=\"dashboard-card\">\r\n                  <h3>Total Vehicles</h3>\r\n                  <p className=\"metric\">{dashboardMetrics.totalVehicleCount.toLocaleString()}</p>\r\n                  <p className=\"trend positive\">From {dashboardMetrics.totalVehicleCount} records</p>\r\n                </div>\r\n                <div className=\"dashboard-card\">\r\n                  <h3>Average Electric Range</h3>\r\n                  <p className=\"metric\">{dashboardMetrics.avgRange} miles</p>\r\n                  <p className=\"trend neutral\">Based on available data</p>\r\n                </div>\r\n                <div className=\"dashboard-card\">\r\n                  <h3>Unique Manufacturers</h3>\r\n                  <p className=\"metric\">{dashboardMetrics.uniqueMakesCount}</p>\r\n                  <p className=\"trend positive\">Different EV makers</p>\r\n                </div>\r\n                <div className=\"dashboard-card\">\r\n                  <h3>BEV vs PHEV Ratio</h3>\r\n                  <p className=\"metric\">\r\n                    {Math.round((dashboardMetrics.bevCount / (dashboardMetrics.bevCount + dashboardMetrics.phevCount)) * 100)}%\r\n                  </p>\r\n                  <p className=\"trend neutral\">{dashboardMetrics.bevCount} BEVs, {dashboardMetrics.phevCount} PHEVs</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"charts-container\">\r\n                <div className=\"chart-row\">\r\n                  <div className=\"chart-wrapper half-width\">\r\n                    <Bar data={chartData.vehicleData} options={barOptions} />\r\n                    <p className=\"chart-description\">Vehicle registrations by model year show the growth trend of electric vehicles over time, with newer models becoming increasingly popular.</p>\r\n                  </div>\r\n                  <div className=\"chart-wrapper half-width\">\r\n                    <Line data={chartData.energyData} options={lineOptions} />\r\n                    <p className=\"chart-description\">Average electric range has been steadily increasing over the years, demonstrating improvements in battery technology and addressing range anxiety concerns.</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"chart-row\">\r\n                  <div className=\"chart-wrapper small-chart\">\r\n                    <Pie data={chartData.stationData} options={{...pieOptions, maintainAspectRatio: true}} />\r\n                    <p className=\"chart-description\">Distribution of electric vehicles across top counties in Washington state, showing regional adoption patterns.</p>\r\n                  </div>\r\n                  <div className=\"chart-wrapper small-chart\">\r\n                    <Doughnut data={chartData.makeData} options={{...doughnutOptions, maintainAspectRatio: true}} />\r\n                    <p className=\"chart-description\">Market share of the top 5 electric vehicle manufacturers, highlighting industry leaders.</p>\r\n                  </div>\r\n                </div>\r\n               \r\n                <div className=\"chart-wrapper\">\r\n                  <Bar data={chartData.usageData} options={hourlyOptions} />\r\n                  <p className=\"chart-description\">This chart shows the distribution of electric vehicles by type (BEV vs PHEV), highlighting the market share of fully electric versus hybrid vehicles.</p>\r\n                </div>\r\n                \r\n                <div className=\"chart-wrapper vehicle-type-chart\">\r\n                  <Bar data={chartData.rangeData} options={rangeOptions} />\r\n                  <p className=\"chart-description\">Distribution of electric vehicles by their electric range capability, showing the most common range categories in the dataset.</p>\r\n                </div>\r\n               \r\n               \r\n              </div>\r\n            </>\r\n          )}\r\n        </section>\r\n      </main>\r\n      \r\n      <footer className=\"footer\">\r\n        <div className=\"footer-content\">\r\n          <p>© 2025 EV Analytics Dashboard. All rights reserved.</p>\r\n          <div className=\"footer-links\">\r\n            <a href=\"#privacy\">Privacy Policy</a>\r\n            <a href=\"#terms\">Terms of Service</a>\r\n            <a href=\"#contact\">Contact</a>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}