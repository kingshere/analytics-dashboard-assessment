{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barni\\\\OneDrive\\\\Desktop\\\\dashboard\\\\analytics-dashboard-assessment\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// Import additional components for mapping\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Bar, Line, Pie, Doughnut } from 'react-chartjs-2';\nimport Papa from 'papaparse';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  const [currentSection, setCurrentSection] = useState('dashboard');\n  const [chartData, setChartData] = useState({\n    vehicleData: null,\n    energyData: null,\n    stationData: null,\n    usageData: null\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [dashboardMetrics, setDashboardMetrics] = useState({\n    totalVehicleCount: 0,\n    avgRange: 0,\n    uniqueMakesCount: 0,\n    bevCount: 0,\n    phevCount: 0\n  });\n  useEffect(() => {\n    const loadCSVData = async () => {\n      try {\n        const response = await fetch('/data-to-visualize/Electric_Vehicle_Population_Data.csv');\n        if (!response.ok) {\n          throw new Error(`Failed to fetch CSV: ${response.status} ${response.statusText}`);\n        }\n        const csvData = await response.text();\n        console.log(\"CSV data loaded, first 100 chars:\", csvData.substring(0, 100));\n        Papa.parse(csvData, {\n          header: true,\n          complete: results => {\n            console.log(\"Parsed data:\", results.data.length, \"rows\");\n            if (results.data.length > 0) {\n              console.log(\"Sample row:\", results.data[0]);\n            }\n            const data = results.data.filter(row => Object.keys(row).length > 1);\n            processData(data);\n          },\n          error: error => {\n            console.error('Error parsing CSV:', error);\n            setIsLoading(false);\n          }\n        });\n      } catch (error) {\n        console.error('Error fetching CSV:', error);\n        setIsLoading(false);\n        generateMockData();\n      }\n    };\n    const generateMockData = () => {\n      console.log(\"Generating mock data as fallback\");\n      const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n      const vehicleCounts = months.map(() => Math.floor(Math.random() * 500) + 800);\n      const energyUsage = months.map(() => Math.floor(Math.random() * 200) + 100);\n      const stationActivity = [35, 25, 15, 10, 15];\n      const usageByTime = Array.from({\n        length: 24\n      }, (_, i) => ({\n        hour: i,\n        usage: Math.floor(Math.random() * 80) + 20\n      }));\n    };\n    const processData = data => {\n      console.log(\"Processing\", data.length, \"rows of data\");\n      const vehiclesByYear = {};\n      data.forEach(row => {\n        const year = row['Model Year'];\n        if (year && !isNaN(year)) {\n          vehiclesByYear[year] = (vehiclesByYear[year] || 0) + 1;\n        }\n      });\n      const sortedYears = Object.keys(vehiclesByYear).sort();\n      const vehicleCounts = sortedYears.map(year => vehiclesByYear[year]);\n\n      // Process electric range by year data\n      const rangeByYear = {};\n      let validRangeCount = 0;\n      data.forEach(row => {\n        const year = row['Model Year'];\n        const range = parseFloat(row['Electric Range']);\n        if (year && !isNaN(year) && !isNaN(range) && range > 0) {\n          if (!rangeByYear[year]) {\n            rangeByYear[year] = {\n              total: 0,\n              count: 0\n            };\n          }\n          rangeByYear[year].total += range;\n          rangeByYear[year].count += 1;\n          validRangeCount++;\n        }\n      });\n      const avgRangeByYear = {};\n      Object.keys(rangeByYear).forEach(year => {\n        avgRangeByYear[year] = rangeByYear[year].total / rangeByYear[year].count;\n      });\n      const sortedRangeYears = Object.keys(avgRangeByYear).sort();\n      const avgRangeCounts = sortedRangeYears.map(year => avgRangeByYear[year]);\n\n      // Process CAFV eligibility data\n      const eligibilityStatus = {\n        eligible: 0,\n        notEligible: 0,\n        unknown: 0\n      };\n      data.forEach(row => {\n        const status = row['Clean Alternative Fuel Vehicle (CAFV) Eligibility'];\n        if (status && status.includes('Eligible')) {\n          eligibilityStatus.eligible++;\n        } else if (status && status.includes('Not eligible')) {\n          eligibilityStatus.notEligible++;\n        } else {\n          eligibilityStatus.unknown++;\n        }\n      });\n\n      // Process geographic distribution data\n      const vehiclesByCity = {};\n      data.forEach(row => {\n        const city = row['City'];\n        if (city) {\n          vehiclesByCity[city] = (vehiclesByCity[city] || 0) + 1;\n        }\n      });\n      const topCities = Object.keys(vehiclesByCity).sort((a, b) => vehiclesByCity[b] - vehiclesByCity[a]).slice(0, 10);\n      const cityData = topCities.map(city => vehiclesByCity[city]);\n      const vehiclesByCounty = {};\n      data.forEach(row => {\n        const county = row['County'];\n        if (county) {\n          vehiclesByCounty[county] = (vehiclesByCounty[county] || 0) + 1;\n        }\n      });\n      const topCounties = Object.keys(vehiclesByCounty).sort((a, b) => vehiclesByCounty[b] - vehiclesByCounty[a]).slice(0, 5);\n      const countyData = topCounties.map(county => vehiclesByCounty[county]);\n      const vehiclesByType = {};\n      data.forEach(row => {\n        const type = row['Electric Vehicle Type'];\n        if (type) {\n          vehiclesByType[type] = (vehiclesByType[type] || 0) + 1;\n        }\n      });\n      const vehicleTypes = Object.keys(vehiclesByType);\n      const typeCounts = vehicleTypes.map(type => vehiclesByType[type]);\n      const vehiclesByMake = {};\n      data.forEach(row => {\n        const make = row['Make'];\n        if (make) {\n          vehiclesByMake[make] = (vehiclesByMake[make] || 0) + 1;\n        }\n      });\n      const topMakes = Object.keys(vehiclesByMake).sort((a, b) => vehiclesByMake[b] - vehiclesByMake[a]).slice(0, 5);\n      const makeData = topMakes.map(make => vehiclesByMake[make]);\n      const totalVehicleCount = data.length;\n      let totalRange = 0;\n      let rangeCount = 0;\n      data.forEach(row => {\n        const range = parseFloat(row['Electric Range']);\n        if (!isNaN(range) && range > 0) {\n          totalRange += range;\n          rangeCount++;\n        }\n      });\n      const avgRange = rangeCount > 0 ? Math.round(totalRange / rangeCount) : 0;\n      const uniqueMakes = new Set();\n      data.forEach(row => {\n        if (row['Make']) {\n          uniqueMakes.add(row['Make']);\n        }\n      });\n      let bevCount = 0;\n      let phevCount = 0;\n      data.forEach(row => {\n        if (row['Electric Vehicle Type'] && row['Electric Vehicle Type'].includes('BEV')) {\n          bevCount++;\n        } else if (row['Electric Vehicle Type'] && row['Electric Vehicle Type'].includes('PHEV')) {\n          phevCount++;\n        }\n      });\n      setDashboardMetrics({\n        totalVehicleCount,\n        avgRange,\n        uniqueMakesCount: uniqueMakes.size,\n        bevCount,\n        phevCount\n      });\n      setChartData({\n        vehicleData: {\n          labels: sortedYears,\n          datasets: [{\n            label: 'Vehicles by Model Year',\n            data: vehicleCounts,\n            backgroundColor: 'rgba(54, 162, 235, 0.5)',\n            borderColor: 'rgb(54, 162, 235)',\n            borderWidth: 1\n          }]\n        },\n        energyData: {\n          labels: sortedRangeYears,\n          datasets: [{\n            label: 'Average Electric Range (miles)',\n            data: avgRangeCounts,\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            borderColor: 'rgb(255, 99, 132)',\n            borderWidth: 2,\n            tension: 0.3,\n            fill: true\n          }]\n        },\n        stationData: {\n          labels: topCounties,\n          datasets: [{\n            label: 'Vehicles by County',\n            data: countyData,\n            backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)'],\n            borderColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 206, 86)', 'rgb(75, 192, 192)', 'rgb(153, 102, 255)'],\n            borderWidth: 1\n          }]\n        },\n        makeData: {\n          labels: topMakes,\n          datasets: [{\n            label: 'Vehicles by Manufacturer',\n            data: makeData,\n            backgroundColor: ['rgba(153, 102, 255, 0.6)', 'rgba(255, 159, 64, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(54, 162, 235, 0.6)'],\n            borderColor: ['rgb(153, 102, 255)', 'rgb(255, 159, 64)', 'rgb(75, 192, 192)', 'rgb(255, 206, 86)', 'rgb(54, 162, 235)'],\n            borderWidth: 1\n          }]\n        },\n        usageData: {\n          labels: vehicleTypes,\n          datasets: [{\n            label: 'Vehicles by Type',\n            data: typeCounts,\n            backgroundColor: 'rgba(75, 192, 192, 0.5)',\n            borderColor: 'rgb(75, 192, 192)',\n            borderWidth: 1\n          }]\n        }\n      });\n      setIsLoading(false);\n    };\n    loadCSVData();\n  }, []);\n  const barOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Vehicle Registration by Year'\n      }\n    }\n  };\n  const lineOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Average Electric Range by Year'\n      }\n    }\n  };\n  const pieOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'right'\n      },\n      title: {\n        display: true,\n        text: 'Vehicle Distribution by County'\n      }\n    }\n  };\n  const doughnutOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'right'\n      },\n      title: {\n        display: true,\n        text: 'Top 5 Vehicle Manufacturers'\n      }\n    }\n  };\n  const hourlyOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Vehicles by Type'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Count'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Vehicle Type'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-brand\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"EV Analytics Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"navbar-links\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#dashboard\",\n            onClick: () => setCurrentSection('dashboard'),\n            className: currentSection === 'dashboard' ? 'active' : '',\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#analytics\",\n            onClick: () => setCurrentSection('analytics'),\n            className: currentSection === 'analytics' ? 'active' : '',\n            children: \"Analytics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#reports\",\n            onClick: () => setCurrentSection('reports'),\n            className: currentSection === 'reports' ? 'active' : '',\n            children: \"Reports\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#settings\",\n            onClick: () => setCurrentSection('settings'),\n            className: currentSection === 'settings' ? 'active' : '',\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"dashboard\",\n        className: \"dashboard-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"EV Analytics Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\",\n          children: \"Loading data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Total Vehicles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metric\",\n                children: dashboardMetrics.totalVehicleCount.toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"trend positive\",\n                children: [\"From \", dashboardMetrics.totalVehicleCount, \" records\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Average Electric Range\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metric\",\n                children: [dashboardMetrics.avgRange, \" miles\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"trend neutral\",\n                children: \"Based on available data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Unique Manufacturers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metric\",\n                children: dashboardMetrics.uniqueMakesCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"trend positive\",\n                children: \"Different EV makers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"BEV vs PHEV Ratio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metric\",\n                children: [Math.round(dashboardMetrics.bevCount / (dashboardMetrics.bevCount + dashboardMetrics.phevCount) * 100), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"trend neutral\",\n                children: [dashboardMetrics.bevCount, \" BEVs, \", dashboardMetrics.phevCount, \" PHEVs\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"charts-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-wrapper half-width\",\n                children: [/*#__PURE__*/_jsxDEV(Bar, {\n                  data: chartData.vehicleData,\n                  options: barOptions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"chart-description\",\n                  children: \"Vehicle registrations by model year show the growth trend of electric vehicles over time, with newer models becoming increasingly popular.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-wrapper half-width\",\n                children: [/*#__PURE__*/_jsxDEV(Line, {\n                  data: chartData.energyData,\n                  options: lineOptions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"chart-description\",\n                  children: \"Average electric range has been steadily increasing over the years, demonstrating improvements in battery technology and addressing range anxiety concerns.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-wrapper small-chart\",\n                children: [/*#__PURE__*/_jsxDEV(Pie, {\n                  data: chartData.stationData,\n                  options: {\n                    ...pieOptions,\n                    maintainAspectRatio: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"chart-description\",\n                  children: \"Distribution of electric vehicles across top counties in Washington state.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-wrapper small-chart\",\n                children: [/*#__PURE__*/_jsxDEV(Doughnut, {\n                  data: chartData.makeData,\n                  options: {\n                    ...doughnutOptions,\n                    maintainAspectRatio: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"chart-description\",\n                  children: \"Market share of the top 5 electric vehicle manufacturers.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(Bar, {\n                data: chartData.usageData,\n                options: hourlyOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"chart-description\",\n                children: \"This chart shows the distribution of electric vehicles by type (BEV vs PHEV), highlighting the market share of fully electric versus hybrid vehicles.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\xA9 2025 EV Analytics Dashboard. All rights reserved.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer-links\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#privacy\",\n            children: \"Privacy Policy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#terms\",\n            children: \"Terms of Service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#contact\",\n            children: \"Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 407,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VHa4AreATOkU7Bh7CS4QXZufXYc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Bar","Line","Pie","Doughnut","Papa","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","register","App","_s","currentSection","setCurrentSection","chartData","setChartData","vehicleData","energyData","stationData","usageData","isLoading","setIsLoading","dashboardMetrics","setDashboardMetrics","totalVehicleCount","avgRange","uniqueMakesCount","bevCount","phevCount","loadCSVData","response","fetch","ok","Error","status","statusText","csvData","text","console","log","substring","parse","header","complete","results","data","length","filter","row","Object","keys","processData","error","generateMockData","months","vehicleCounts","map","Math","floor","random","energyUsage","stationActivity","usageByTime","Array","from","_","i","hour","usage","vehiclesByYear","forEach","year","isNaN","sortedYears","sort","rangeByYear","validRangeCount","range","parseFloat","total","count","avgRangeByYear","sortedRangeYears","avgRangeCounts","eligibilityStatus","eligible","notEligible","unknown","includes","vehiclesByCity","city","topCities","a","b","slice","cityData","vehiclesByCounty","county","topCounties","countyData","vehiclesByType","type","vehicleTypes","typeCounts","vehiclesByMake","make","topMakes","makeData","totalRange","rangeCount","round","uniqueMakes","Set","add","size","labels","datasets","label","backgroundColor","borderColor","borderWidth","tension","fill","barOptions","responsive","plugins","legend","position","title","display","lineOptions","pieOptions","doughnutOptions","hourlyOptions","scales","y","beginAtZero","x","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","onClick","id","toLocaleString","options","maintainAspectRatio","_c","$RefreshReg$"],"sources":["C:/Users/barni/OneDrive/Desktop/dashboard/analytics-dashboard-assessment/src/App.js"],"sourcesContent":["// Import additional components for mapping\r\nimport React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { Bar, Line, Pie, Doughnut } from 'react-chartjs-2';\r\nimport Papa from 'papaparse';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nfunction App() {\r\n  const [currentSection, setCurrentSection] = useState('dashboard');\r\n  const [chartData, setChartData] = useState({\r\n    vehicleData: null,\r\n    energyData: null,\r\n    stationData: null,\r\n    usageData: null\r\n  });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [dashboardMetrics, setDashboardMetrics] = useState({\r\n    totalVehicleCount: 0,\r\n    avgRange: 0,\r\n    uniqueMakesCount: 0,\r\n    bevCount: 0,\r\n    phevCount: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    const loadCSVData = async () => {\r\n      try {\r\n        const response = await fetch('/data-to-visualize/Electric_Vehicle_Population_Data.csv');\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch CSV: ${response.status} ${response.statusText}`);\r\n        }\r\n        const csvData = await response.text();\r\n        console.log(\"CSV data loaded, first 100 chars:\", csvData.substring(0, 100));\r\n        \r\n        Papa.parse(csvData, {\r\n          header: true,\r\n          complete: (results) => {\r\n            console.log(\"Parsed data:\", results.data.length, \"rows\");\r\n            if (results.data.length > 0) {\r\n              console.log(\"Sample row:\", results.data[0]);\r\n            }\r\n            const data = results.data.filter(row => Object.keys(row).length > 1);\r\n            processData(data);\r\n          },\r\n          error: (error) => {\r\n            console.error('Error parsing CSV:', error);\r\n            setIsLoading(false);\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('Error fetching CSV:', error);\r\n        setIsLoading(false);\r\n        generateMockData();\r\n      }\r\n    };\r\n    \r\n    const generateMockData = () => {\r\n      console.log(\"Generating mock data as fallback\");\r\n      const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n      const vehicleCounts = months.map(() => Math.floor(Math.random() * 500) + 800);\r\n      const energyUsage = months.map(() => Math.floor(Math.random() * 200) + 100);\r\n      const stationActivity = [35, 25, 15, 10, 15];\r\n      const usageByTime = Array.from({length: 24}, (_, i) => ({\r\n        hour: i,\r\n        usage: Math.floor(Math.random() * 80) + 20\r\n      }));\r\n    };\r\n    \r\n    const processData = (data) => {\r\n      console.log(\"Processing\", data.length, \"rows of data\");\r\n      \r\n      const vehiclesByYear = {};\r\n      data.forEach(row => {\r\n        const year = row['Model Year'];\r\n        if (year && !isNaN(year)) {\r\n          vehiclesByYear[year] = (vehiclesByYear[year] || 0) + 1;\r\n        }\r\n      });\r\n      \r\n      const sortedYears = Object.keys(vehiclesByYear).sort();\r\n      const vehicleCounts = sortedYears.map(year => vehiclesByYear[year]);\r\n      \r\n      // Process electric range by year data\r\n      const rangeByYear = {};\r\n      let validRangeCount = 0;\r\n      \r\n      data.forEach(row => {\r\n        const year = row['Model Year'];\r\n        const range = parseFloat(row['Electric Range']);\r\n        if (year && !isNaN(year) && !isNaN(range) && range > 0) {\r\n          if (!rangeByYear[year]) {\r\n            rangeByYear[year] = { total: 0, count: 0 };\r\n          }\r\n          rangeByYear[year].total += range;\r\n          rangeByYear[year].count += 1;\r\n          validRangeCount++;\r\n        }\r\n      });\r\n      \r\n      const avgRangeByYear = {};\r\n      Object.keys(rangeByYear).forEach(year => {\r\n        avgRangeByYear[year] = rangeByYear[year].total / rangeByYear[year].count;\r\n      });\r\n      \r\n      const sortedRangeYears = Object.keys(avgRangeByYear).sort();\r\n      const avgRangeCounts = sortedRangeYears.map(year => avgRangeByYear[year]);\r\n      \r\n      // Process CAFV eligibility data\r\n      const eligibilityStatus = {\r\n        eligible: 0,\r\n        notEligible: 0,\r\n        unknown: 0\r\n      };\r\n      \r\n      data.forEach(row => {\r\n        const status = row['Clean Alternative Fuel Vehicle (CAFV) Eligibility'];\r\n        if (status && status.includes('Eligible')) {\r\n          eligibilityStatus.eligible++;\r\n        } else if (status && status.includes('Not eligible')) {\r\n          eligibilityStatus.notEligible++;\r\n        } else {\r\n          eligibilityStatus.unknown++;\r\n        }\r\n      });\r\n      \r\n      // Process geographic distribution data\r\n      const vehiclesByCity = {};\r\n      data.forEach(row => {\r\n        const city = row['City'];\r\n        if (city) {\r\n          vehiclesByCity[city] = (vehiclesByCity[city] || 0) + 1;\r\n        }\r\n      });\r\n      \r\n      const topCities = Object.keys(vehiclesByCity)\r\n        .sort((a, b) => vehiclesByCity[b] - vehiclesByCity[a])\r\n        .slice(0, 10);\r\n      \r\n      const cityData = topCities.map(city => vehiclesByCity[city]);\r\n      \r\n      const vehiclesByCounty = {};\r\n      data.forEach(row => {\r\n        const county = row['County'];\r\n        if (county) {\r\n          vehiclesByCounty[county] = (vehiclesByCounty[county] || 0) + 1;\r\n        }\r\n      });\r\n      \r\n      const topCounties = Object.keys(vehiclesByCounty)\r\n        .sort((a, b) => vehiclesByCounty[b] - vehiclesByCounty[a])\r\n        .slice(0, 5);\r\n      \r\n      const countyData = topCounties.map(county => vehiclesByCounty[county]);\r\n      \r\n      const vehiclesByType = {};\r\n      data.forEach(row => {\r\n        const type = row['Electric Vehicle Type'];\r\n        if (type) {\r\n          vehiclesByType[type] = (vehiclesByType[type] || 0) + 1;\r\n        }\r\n      });\r\n      \r\n      const vehicleTypes = Object.keys(vehiclesByType);\r\n      const typeCounts = vehicleTypes.map(type => vehiclesByType[type]);\r\n      \r\n      const vehiclesByMake = {};\r\n      data.forEach(row => {\r\n        const make = row['Make'];\r\n        if (make) {\r\n          vehiclesByMake[make] = (vehiclesByMake[make] || 0) + 1;\r\n        }\r\n      });\r\n      \r\n      const topMakes = Object.keys(vehiclesByMake)\r\n        .sort((a, b) => vehiclesByMake[b] - vehiclesByMake[a])\r\n        .slice(0, 5);\r\n      \r\n      const makeData = topMakes.map(make => vehiclesByMake[make]);\r\n      \r\n      const totalVehicleCount = data.length;\r\n      \r\n      let totalRange = 0;\r\n      let rangeCount = 0;\r\n      data.forEach(row => {\r\n        const range = parseFloat(row['Electric Range']);\r\n        if (!isNaN(range) && range > 0) {\r\n          totalRange += range;\r\n          rangeCount++;\r\n        }\r\n      });\r\n      const avgRange = rangeCount > 0 ? Math.round(totalRange / rangeCount) : 0;\r\n      \r\n      const uniqueMakes = new Set();\r\n      data.forEach(row => {\r\n        if (row['Make']) {\r\n          uniqueMakes.add(row['Make']);\r\n        }\r\n      });\r\n      \r\n      let bevCount = 0;\r\n      let phevCount = 0;\r\n      data.forEach(row => {\r\n        if (row['Electric Vehicle Type'] && row['Electric Vehicle Type'].includes('BEV')) {\r\n          bevCount++;\r\n        } else if (row['Electric Vehicle Type'] && row['Electric Vehicle Type'].includes('PHEV')) {\r\n          phevCount++;\r\n        }\r\n      });\r\n      \r\n      setDashboardMetrics({\r\n        totalVehicleCount,\r\n        avgRange,\r\n        uniqueMakesCount: uniqueMakes.size,\r\n        bevCount,\r\n        phevCount\r\n      });\r\n      \r\n      setChartData({\r\n        vehicleData: {\r\n          labels: sortedYears,\r\n          datasets: [{\r\n            label: 'Vehicles by Model Year',\r\n            data: vehicleCounts,\r\n            backgroundColor: 'rgba(54, 162, 235, 0.5)',\r\n            borderColor: 'rgb(54, 162, 235)',\r\n            borderWidth: 1\r\n          }]\r\n        },\r\n        energyData: {\r\n          labels: sortedRangeYears,\r\n          datasets: [{\r\n            label: 'Average Electric Range (miles)',\r\n            data: avgRangeCounts,\r\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n            borderColor: 'rgb(255, 99, 132)',\r\n            borderWidth: 2,\r\n            tension: 0.3,\r\n            fill: true\r\n          }]\r\n        },\r\n        stationData: {\r\n          labels: topCounties,\r\n          datasets: [{\r\n            label: 'Vehicles by County',\r\n            data: countyData,\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.6)',\r\n              'rgba(54, 162, 235, 0.6)',\r\n              'rgba(255, 206, 86, 0.6)',\r\n              'rgba(75, 192, 192, 0.6)',\r\n              'rgba(153, 102, 255, 0.6)',\r\n            ],\r\n            borderColor: [\r\n              'rgb(255, 99, 132)',\r\n              'rgb(54, 162, 235)',\r\n              'rgb(255, 206, 86)',\r\n              'rgb(75, 192, 192)',\r\n              'rgb(153, 102, 255)',\r\n            ],\r\n            borderWidth: 1\r\n          }]\r\n        },\r\n        makeData: {\r\n          labels: topMakes,\r\n          datasets: [{\r\n            label: 'Vehicles by Manufacturer',\r\n            data: makeData,\r\n            backgroundColor: [\r\n              'rgba(153, 102, 255, 0.6)',\r\n              'rgba(255, 159, 64, 0.6)',\r\n              'rgba(75, 192, 192, 0.6)',\r\n              'rgba(255, 206, 86, 0.6)',\r\n              'rgba(54, 162, 235, 0.6)',\r\n            ],\r\n            borderColor: [\r\n              'rgb(153, 102, 255)',\r\n              'rgb(255, 159, 64)',\r\n              'rgb(75, 192, 192)',\r\n              'rgb(255, 206, 86)',\r\n              'rgb(54, 162, 235)',\r\n            ],\r\n            borderWidth: 1\r\n          }]\r\n        },\r\n        usageData: {\r\n          labels: vehicleTypes,\r\n          datasets: [{\r\n            label: 'Vehicles by Type',\r\n            data: typeCounts,\r\n            backgroundColor: 'rgba(75, 192, 192, 0.5)',\r\n            borderColor: 'rgb(75, 192, 192)',\r\n            borderWidth: 1\r\n          }]\r\n        }\r\n      });\r\n      \r\n      setIsLoading(false);\r\n    };\r\n    \r\n    loadCSVData();\r\n  }, []);\r\n\r\n  const barOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Vehicle Registration by Year',\r\n      },\r\n    },\r\n  };\r\n\r\n  const lineOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Average Electric Range by Year',\r\n      },\r\n    },\r\n  };\r\n  \r\n  const pieOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'right',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Vehicle Distribution by County',\r\n      },\r\n    },\r\n  };\r\n\r\n  const doughnutOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'right',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Top 5 Vehicle Manufacturers',\r\n      },\r\n    },\r\n  };\r\n\r\n  const hourlyOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Vehicles by Type',\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Count'\r\n        }\r\n      },\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: 'Vehicle Type'\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <nav className=\"navbar\">\r\n        <div className=\"navbar-brand\">\r\n          <h1>EV Analytics Dashboard</h1>\r\n        </div>\r\n        \r\n        <ul className=\"navbar-links\">\r\n          <li><a href=\"#dashboard\" onClick={() => setCurrentSection('dashboard')} className={currentSection === 'dashboard' ? 'active' : ''}>Dashboard</a></li>\r\n          <li><a href=\"#analytics\" onClick={() => setCurrentSection('analytics')} className={currentSection === 'analytics' ? 'active' : ''}>Analytics</a></li>\r\n          <li><a href=\"#reports\" onClick={() => setCurrentSection('reports')} className={currentSection === 'reports' ? 'active' : ''}>Reports</a></li>\r\n          <li><a href=\"#settings\" onClick={() => setCurrentSection('settings')} className={currentSection === 'settings' ? 'active' : ''}>Settings</a></li>\r\n        </ul>\r\n      </nav>\r\n      \r\n      <main className=\"content\">\r\n        <section id=\"dashboard\" className=\"dashboard-container\">\r\n          <h2>EV Analytics Overview</h2>\r\n          \r\n          {isLoading ? (\r\n            <div className=\"loading-spinner\">Loading data...</div>\r\n          ) : (\r\n            <>\r\n              <div className=\"dashboard-grid\">\r\n                <div className=\"dashboard-card\">\r\n                  <h3>Total Vehicles</h3>\r\n                  <p className=\"metric\">{dashboardMetrics.totalVehicleCount.toLocaleString()}</p>\r\n                  <p className=\"trend positive\">From {dashboardMetrics.totalVehicleCount} records</p>\r\n                </div>\r\n                <div className=\"dashboard-card\">\r\n                  <h3>Average Electric Range</h3>\r\n                  <p className=\"metric\">{dashboardMetrics.avgRange} miles</p>\r\n                  <p className=\"trend neutral\">Based on available data</p>\r\n                </div>\r\n                <div className=\"dashboard-card\">\r\n                  <h3>Unique Manufacturers</h3>\r\n                  <p className=\"metric\">{dashboardMetrics.uniqueMakesCount}</p>\r\n                  <p className=\"trend positive\">Different EV makers</p>\r\n                </div>\r\n                <div className=\"dashboard-card\">\r\n                  <h3>BEV vs PHEV Ratio</h3>\r\n                  <p className=\"metric\">\r\n                    {Math.round((dashboardMetrics.bevCount / (dashboardMetrics.bevCount + dashboardMetrics.phevCount)) * 100)}%\r\n                  </p>\r\n                  <p className=\"trend neutral\">{dashboardMetrics.bevCount} BEVs, {dashboardMetrics.phevCount} PHEVs</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"charts-container\">\r\n                <div className=\"chart-row\">\r\n                  <div className=\"chart-wrapper half-width\">\r\n                    <Bar data={chartData.vehicleData} options={barOptions} />\r\n                    <p className=\"chart-description\">Vehicle registrations by model year show the growth trend of electric vehicles over time, with newer models becoming increasingly popular.</p>\r\n                  </div>\r\n                  <div className=\"chart-wrapper half-width\">\r\n                    <Line data={chartData.energyData} options={lineOptions} />\r\n                    <p className=\"chart-description\">Average electric range has been steadily increasing over the years, demonstrating improvements in battery technology and addressing range anxiety concerns.</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"chart-row\">\r\n                  <div className=\"chart-wrapper small-chart\">\r\n                    <Pie data={chartData.stationData} options={{...pieOptions, maintainAspectRatio: true}} />\r\n                    <p className=\"chart-description\">Distribution of electric vehicles across top counties in Washington state.</p>\r\n                  </div>\r\n                  <div className=\"chart-wrapper small-chart\">\r\n                    <Doughnut data={chartData.makeData} options={{...doughnutOptions, maintainAspectRatio: true}} />\r\n                    <p className=\"chart-description\">Market share of the top 5 electric vehicle manufacturers.</p>\r\n                  </div>\r\n                </div>\r\n             \r\n                <div className=\"chart-wrapper\">\r\n                  <Bar data={chartData.usageData} options={hourlyOptions} />\r\n                  <p className=\"chart-description\">This chart shows the distribution of electric vehicles by type (BEV vs PHEV), highlighting the market share of fully electric versus hybrid vehicles.</p>\r\n                </div>\r\n                \r\n              \r\n               \r\n              </div>\r\n            </>\r\n          )}\r\n        </section>\r\n      </main>\r\n      \r\n      <footer className=\"footer\">\r\n        <div className=\"footer-content\">\r\n          <p>© 2025 EV Analytics Dashboard. All rights reserved.</p>\r\n          <div className=\"footer-links\">\r\n            <a href=\"#privacy\">Privacy Policy</a>\r\n            <a href=\"#terms\">Terms of Service</a>\r\n            <a href=\"#contact\">Contact</a>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}