{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barni\\\\OneDrive\\\\Desktop\\\\dashboard\\\\analytics-dashboard-assessment\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Bar, Line, Pie, Doughnut } from 'react-chartjs-2';\nimport Papa from 'papaparse';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  var _chartData$stationDat, _chartData$stationDat2, _chartData$stationDat3, _chartData$stationDat4, _chartData$stationDat5, _chartData$stationDat6, _chartData$stationDat7, _chartData$stationDat8;\n  const [chartData, setChartData] = useState({\n    vehicleData: null,\n    energyData: null,\n    stationData: null,\n    usageData: null\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [dashboardMetrics, setDashboardMetrics] = useState({\n    totalVehicleCount: 0,\n    avgRange: 0,\n    uniqueMakesCount: 0,\n    bevcount: 0,\n    phevCount: 0\n  });\n  useEffect(() => {\n    const loadCSVData = async () => {\n      try {\n        const response = await fetch('/data-to-visualize/Electric_Vehicle_Population_Data.csv');\n        const csvData = await response.text();\n        Papa.parse(csvData, {\n          header: true,\n          complete: results => {\n            const data = results.data.filter(row => Object.keys(row).length > 1);\n            processData(data);\n          },\n          error: error => {\n            console.error('Error parsing CSV:', error);\n            setIsLoading(false);\n          }\n        });\n      } catch (error) {\n        console.error('Error fetching CSV:', error);\n        setIsLoading(false);\n      }\n    };\n    const processData = data => {\n      const vehiclesByYear = {};\n      data.forEach(row => {\n        const year = row['Model Year'];\n        if (year && !isNaN(year)) {\n          vehiclesByYear[year] = (vehiclesByYear[year] || 0) + 1;\n        }\n      });\n      const sortedYears = Object.keys(vehiclesByYear).sort();\n      const vehicleCounts = sortedYears.map(year => vehiclesByYear[year]);\n      const energyByYear = {};\n      let totalVehicles = 0;\n      data.forEach(row => {\n        const year = row['Model Year'];\n        const range = parseFloat(row['Electric Range']);\n        if (year && !isNaN(year) && !isNaN(range)) {\n          if (!energyByYear[year]) {\n            energyByYear[year] = {\n              total: 0,\n              count: 0\n            };\n          }\n          energyByYear[year].total += range;\n          energyByYear[year].count += 1;\n          totalVehicles += 1;\n        }\n      });\n      const avgEnergyByYear = {};\n      Object.keys(energyByYear).forEach(year => {\n        avgEnergyByYear[year] = energyByYear[year].total / energyByYear[year].count;\n      });\n      const sortedEnergyYears = Object.keys(avgEnergyByYear).sort();\n      const avgEnergyCounts = sortedEnergyYears.map(year => avgEnergyByYear[year]);\n      const stationsByCounty = {};\n      data.forEach(row => {\n        const county = row['County'];\n        if (county) {\n          stationsByCounty[county] = (stationsByCounty[county] || 0) + 1;\n        }\n      });\n      const topCounties = Object.keys(stationsByCounty).sort((a, b) => stationsByCounty[b] - stationsByCounty[a]).slice(0, 5);\n      const countyData = topCounties.map(county => stationsByCounty[county]);\n      const usageByType = {};\n      data.forEach(row => {\n        const type = row['Electric Vehicle Type'];\n        if (type) {\n          usageByType[type] = (usageByType[type] || 0) + 1;\n        }\n      });\n      const vehicleTypes = Object.keys(usageByType);\n      const typeCounts = vehicleTypes.map(type => usageByType[type]);\n      const totalVehicleCount = data.length;\n      let totalRange = 0;\n      let rangeCount = 0;\n      data.forEach(row => {\n        const range = parseFloat(row['Electric Range']);\n        if (!isNaN(range) && range > 0) {\n          totalRange += range;\n          rangeCount++;\n        }\n      });\n      const avgRange = rangeCount > 0 ? Math.round(totalRange / rangeCount) : 0;\n      const uniqueMakes = new Set();\n      data.forEach(row => {\n        if (row['Make']) {\n          uniqueMakes.add(row['Make']);\n        }\n      });\n      let bevcount = 0;\n      let phevCount = 0;\n      data.forEach(row => {\n        if (row['Electric Vehicle Type'] && row['Electric Vehicle Type'].includes('BEV')) {\n          bevcount++;\n        } else if (row['Electric Vehicle Type'] && row['Electric Vehicle Type'].includes('PHEV')) {\n          phevCount++;\n        }\n      });\n      setDashboardMetrics({\n        totalVehicleCount,\n        avgRange,\n        uniqueMakesCount: uniqueMakes.size,\n        bevcount,\n        phevCount\n      });\n      setChartData({\n        vehicleData: {\n          labels: sortedYears,\n          datasets: [{\n            label: 'Total Vehicles',\n            data: vehicleCounts,\n            backgroundColor: 'rgba(54, 162, 235, 0.5)',\n            borderColor: 'rgb(54, 162, 235)',\n            borderWidth: 1\n          }]\n        },\n        energyData: {\n          labels: sortedEnergyYears,\n          datasets: [{\n            label: 'Average Electric Range (miles)',\n            data: avgEnergyCounts,\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            borderColor: 'rgb(255, 99, 132)',\n            borderWidth: 2,\n            tension: 0.3,\n            fill: true\n          }]\n        },\n        stationData: {\n          labels: topCounties,\n          datasets: [{\n            label: 'Vehicle Distribution by County',\n            data: countyData,\n            backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)'],\n            borderColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 206, 86)', 'rgb(75, 192, 192)', 'rgb(153, 102, 255)'],\n            borderWidth: 1\n          }]\n        },\n        usageData: {\n          labels: vehicleTypes,\n          datasets: [{\n            label: 'Vehicles by Type',\n            data: typeCounts,\n            backgroundColor: 'rgba(75, 192, 192, 0.5)',\n            borderColor: 'rgb(75, 192, 192)',\n            borderWidth: 1\n          }]\n        }\n      });\n      setIsLoading(false);\n    };\n    loadCSVData();\n  }, []);\n  const barOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Vehicle Registration by Year'\n      }\n    }\n  };\n  const lineOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Average Electric Range by Year'\n      }\n    }\n  };\n  const pieOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'right'\n      },\n      title: {\n        display: true,\n        text: 'Vehicle Distribution by County'\n      }\n    }\n  };\n  const hourlyOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Vehicles by Type'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Count'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Vehicle Type'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-brand\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"EV Analytics Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"dashboard\",\n        className: \"dashboardcont\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"EV Analytics Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\",\n          children: \"Loading data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dasboardgrid single-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboardcard\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Total Vehicles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metric\",\n                children: dashboardMetrics.totalVehicleCount.toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"trend positive\",\n                children: [\"From \", dashboardMetrics.totalVehicleCount, \" records\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboardcard\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Average Electric Range\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metric\",\n                children: [dashboardMetrics.avgRange, \" miles\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"trend neutral\",\n                children: \"Based on available data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboardcard\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Unique Manufacturers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metric\",\n                children: dashboardMetrics.uniqueMakesCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"trend positive\",\n                children: \"Different EV makers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboardcard\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"BEV vs PHEV Ratio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metric\",\n                children: [Math.round(dashboardMetrics.bevcount / (dashboardMetrics.bevcount + dashboardMetrics.phevCount) * 100), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"trend neutral\",\n                children: [dashboardMetrics.bevcount, \" BEVs, \", dashboardMetrics.phevCount, \" PHEVs\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-table-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Key EV Metrics Table\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-table-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"data-table\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Metric\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Value\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 323,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Trend\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 324,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Total EV Population\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 329,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dashboardMetrics.totalVehicleCount.toLocaleString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 330,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Complete dataset records\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 331,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Battery Electric Vehicles (BEVs)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 334,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dashboardMetrics.bevcount.toLocaleString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 335,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [Math.round(dashboardMetrics.bevcount / dashboardMetrics.totalVehicleCount * 100), \"% of total\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 336,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Plug-in Hybrid Vehicles (PHEVs)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 339,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dashboardMetrics.phevCount.toLocaleString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [Math.round(dashboardMetrics.phevCount / dashboardMetrics.totalVehicleCount * 100), \"% of total\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 341,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Average Electric Range\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 344,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [dashboardMetrics.avgRange, \" miles\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 345,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Across all vehicle types\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Unique Manufacturers\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 349,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dashboardMetrics.uniqueMakesCount\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 350,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Diverse market participation\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 351,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Top County\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 354,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: ((_chartData$stationDat = chartData.stationData) === null || _chartData$stationDat === void 0 ? void 0 : _chartData$stationDat.labels[0]) || 'N/A'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 355,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [((_chartData$stationDat2 = chartData.stationData) === null || _chartData$stationDat2 === void 0 ? void 0 : (_chartData$stationDat3 = _chartData$stationDat2.datasets[0]) === null || _chartData$stationDat3 === void 0 ? void 0 : (_chartData$stationDat4 = _chartData$stationDat3.data[0]) === null || _chartData$stationDat4 === void 0 ? void 0 : _chartData$stationDat4.toLocaleString()) || 0, \" vehicles\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 356,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"Second County\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 359,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: ((_chartData$stationDat5 = chartData.stationData) === null || _chartData$stationDat5 === void 0 ? void 0 : _chartData$stationDat5.labels[1]) || 'N/A'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 360,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [((_chartData$stationDat6 = chartData.stationData) === null || _chartData$stationDat6 === void 0 ? void 0 : (_chartData$stationDat7 = _chartData$stationDat6.datasets[0]) === null || _chartData$stationDat7 === void 0 ? void 0 : (_chartData$stationDat8 = _chartData$stationDat7.data[1]) === null || _chartData$stationDat8 === void 0 ? void 0 : _chartData$stationDat8.toLocaleString()) || 0, \" vehicles\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 361,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"BEV to PHEV Ratio\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 364,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: (dashboardMetrics.bevcount / dashboardMetrics.phevCount).toFixed(2)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 365,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"BEVs per PHEV\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 366,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chartscont\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chartrow\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chartwrapper half-width\",\n                children: [/*#__PURE__*/_jsxDEV(Bar, {\n                  data: chartData.vehicleData,\n                  options: barOptions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"chartinfo\",\n                  children: \"Vehicle registrations by model year show the growth trend of electric vehicles over time, with newer models becoming increasingly popular.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chartwrapper half-width\",\n                children: [/*#__PURE__*/_jsxDEV(Line, {\n                  data: chartData.energyData,\n                  options: lineOptions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"chartinfo\",\n                  children: \"Average electric range has been steadily increasing over the years, demonstrating improvements in battery technology and addressing range anxiety concerns.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chartrow\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chartwrapper minichart pie-chart-container\",\n                children: [/*#__PURE__*/_jsxDEV(Pie, {\n                  data: chartData.stationData,\n                  options: {\n                    ...pieOptions,\n                    maintainAspectRatio: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"chartinfo\",\n                  children: \"The distribution of electric vehicles across counties shows concentration in urban areas, reflecting charging infrastructure availability and adoption patterns.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chartwrapper minichart doughnut-chart-container\",\n                children: [/*#__PURE__*/_jsxDEV(Doughnut, {\n                  data: chartData.stationData,\n                  options: {\n                    ...pieOptions,\n                    maintainAspectRatio: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"chartinfo\",\n                  children: \"County distribution highlights potential areas for infrastructure expansion to support growing EV adoption in less represented regions.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chartwrapper medium-width-chart\",\n              children: [/*#__PURE__*/_jsxDEV(Bar, {\n                data: chartData.usageData,\n                options: hourlyOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"chartinfo\",\n                children: \"The breakdown by vehicle type shows the market share between battery electric vehicles (BEVs) and plug-in hybrid electric vehicles (PHEVs), indicating consumer preferences.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footertext\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\xA9 2025 EV Analytics Dashboard. All rights reserved.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1FFAgtLqI8W3NZO9ID0TeTAG1+o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Bar","Line","Pie","Doughnut","Papa","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","register","App","_s","_chartData$stationDat","_chartData$stationDat2","_chartData$stationDat3","_chartData$stationDat4","_chartData$stationDat5","_chartData$stationDat6","_chartData$stationDat7","_chartData$stationDat8","chartData","setChartData","vehicleData","energyData","stationData","usageData","isLoading","setIsLoading","dashboardMetrics","setDashboardMetrics","totalVehicleCount","avgRange","uniqueMakesCount","bevcount","phevCount","loadCSVData","response","fetch","csvData","text","parse","header","complete","results","data","filter","row","Object","keys","length","processData","error","console","vehiclesByYear","forEach","year","isNaN","sortedYears","sort","vehicleCounts","map","energyByYear","totalVehicles","range","parseFloat","total","count","avgEnergyByYear","sortedEnergyYears","avgEnergyCounts","stationsByCounty","county","topCounties","a","b","slice","countyData","usageByType","type","vehicleTypes","typeCounts","totalRange","rangeCount","Math","round","uniqueMakes","Set","add","includes","size","labels","datasets","label","backgroundColor","borderColor","borderWidth","tension","fill","barOptions","responsive","plugins","legend","position","title","display","lineOptions","pieOptions","hourlyOptions","scales","y","beginAtZero","x","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","toLocaleString","toFixed","options","maintainAspectRatio","_c","$RefreshReg$"],"sources":["C:/Users/barni/OneDrive/Desktop/dashboard/analytics-dashboard-assessment/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { Bar, Line, Pie, Doughnut } from 'react-chartjs-2';\r\nimport Papa from 'papaparse';\r\nimport {\r\n  Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,BarElement,ArcElement,Title,Tooltip,Legend,\r\n} from 'chart.js';\r\nChartJS.register(\r\n  CategoryScale,LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,Title,Tooltip,Legend\r\n);\r\n\r\nfunction App() {\r\n  const [chartData, setChartData] = useState({\r\n    vehicleData: null,\r\n    energyData: null,\r\n    stationData: null,\r\n    usageData: null\r\n  });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [dashboardMetrics, setDashboardMetrics] = useState({\r\n    totalVehicleCount: 0,\r\n    avgRange: 0,\r\n    uniqueMakesCount: 0,\r\n    bevcount: 0,\r\n    phevCount: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    const loadCSVData = async () => {\r\n      try {\r\n        const response = await fetch('/data-to-visualize/Electric_Vehicle_Population_Data.csv');\r\n        const csvData = await response.text();\r\n        \r\n        Papa.parse(csvData, {\r\n          header: true,\r\n          complete: (results) => {\r\n            const data = results.data.filter(row => Object.keys(row).length > 1); \r\n            processData(data);\r\n          },\r\n          error: (error) => {\r\n            console.error('Error parsing CSV:', error);\r\n            setIsLoading(false);\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('Error fetching CSV:', error);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    const processData = (data) => {\r\n      const vehiclesByYear = {};\r\n      data.forEach(row => {\r\n        const year = row['Model Year'];\r\n        if (year && !isNaN(year)) {\r\n          vehiclesByYear[year] = (vehiclesByYear[year] || 0) + 1;\r\n        }\r\n      });\r\n      const sortedYears = Object.keys(vehiclesByYear).sort();\r\n      const vehicleCounts = sortedYears.map(year => vehiclesByYear[year]);\r\n      const energyByYear = {};\r\n      let totalVehicles = 0;\r\n      data.forEach(row => {\r\n        const year = row['Model Year'];\r\n        const range = parseFloat(row['Electric Range']);\r\n        if (year && !isNaN(year) && !isNaN(range)) {\r\n          if (!energyByYear[year]) {\r\n            energyByYear[year] = { total: 0, count: 0 };\r\n          }\r\n          energyByYear[year].total += range;\r\n          energyByYear[year].count += 1;\r\n          totalVehicles += 1;\r\n        }\r\n      });\r\n      \r\n      const avgEnergyByYear = {};\r\n      Object.keys(energyByYear).forEach(year => {\r\n        avgEnergyByYear[year] = energyByYear[year].total / energyByYear[year].count;\r\n      });\r\n      \r\n      const sortedEnergyYears = Object.keys(avgEnergyByYear).sort();\r\n      const avgEnergyCounts = sortedEnergyYears.map(year => avgEnergyByYear[year]);\r\n     \r\n      const stationsByCounty = {};\r\n      data.forEach(row => {\r\n        const county = row['County'];\r\n        if (county) {\r\n          stationsByCounty[county] = (stationsByCounty[county] || 0) + 1;\r\n        }\r\n      });\r\n      const topCounties = Object.keys(stationsByCounty)\r\n        .sort((a, b) => stationsByCounty[b] - stationsByCounty[a])\r\n        .slice(0, 5);\r\n      \r\n      const countyData = topCounties.map(county => stationsByCounty[county]);\r\n   \r\n      const usageByType = {};\r\n      data.forEach(row => {\r\n        const type = row['Electric Vehicle Type'];\r\n        if (type) {\r\n          usageByType[type] = (usageByType[type] || 0) + 1;\r\n        }\r\n      });\r\n      \r\n      const vehicleTypes = Object.keys(usageByType);\r\n      const typeCounts = vehicleTypes.map(type => usageByType[type]);\r\n      \r\n\r\n      const totalVehicleCount = data.length;\r\n\r\n      let totalRange = 0;\r\n      let rangeCount = 0;\r\n      data.forEach(row => {\r\n        const range = parseFloat(row['Electric Range']);\r\n        if (!isNaN(range) && range > 0) {\r\n          totalRange += range;\r\n          rangeCount++;\r\n        }\r\n      });\r\n      const avgRange = rangeCount > 0 ? Math.round(totalRange / rangeCount) : 0;\r\n      const uniqueMakes = new Set();\r\n      data.forEach(row => {\r\n        if (row['Make']) {\r\n          uniqueMakes.add(row['Make']);\r\n        }\r\n      });\r\n      let bevcount = 0;\r\n      let phevCount = 0;\r\n      data.forEach(row => {\r\n        if (row['Electric Vehicle Type'] && row['Electric Vehicle Type'].includes('BEV')) {\r\n          bevcount++;\r\n        } else if (row['Electric Vehicle Type'] && row['Electric Vehicle Type'].includes('PHEV')) {\r\n          phevCount++;\r\n        }\r\n      });\r\n      setDashboardMetrics({\r\n        totalVehicleCount,\r\n        avgRange,\r\n        uniqueMakesCount: uniqueMakes.size,\r\n        bevcount,\r\n        phevCount\r\n      });\r\n      setChartData({\r\n        vehicleData: {\r\n          labels: sortedYears,\r\n          datasets: [{\r\n            label: 'Total Vehicles',\r\n            data: vehicleCounts,\r\n            backgroundColor: 'rgba(54, 162, 235, 0.5)',\r\n            borderColor: 'rgb(54, 162, 235)',\r\n            borderWidth: 1\r\n          }]\r\n        },\r\n        energyData: {\r\n          labels: sortedEnergyYears,\r\n          datasets: [{\r\n            label: 'Average Electric Range (miles)',\r\n            data: avgEnergyCounts,\r\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n            borderColor: 'rgb(255, 99, 132)',\r\n            borderWidth: 2,\r\n            tension: 0.3,\r\n            fill: true\r\n          }]\r\n        },\r\n        stationData: {\r\n          labels: topCounties,\r\n          datasets: [{\r\n            label: 'Vehicle Distribution by County',\r\n            data: countyData,\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.6)',\r\n              'rgba(54, 162, 235, 0.6)',\r\n              'rgba(255, 206, 86, 0.6)',\r\n              'rgba(75, 192, 192, 0.6)',\r\n              'rgba(153, 102, 255, 0.6)',\r\n            ],\r\n            borderColor: [\r\n              'rgb(255, 99, 132)',\r\n              'rgb(54, 162, 235)',\r\n              'rgb(255, 206, 86)',\r\n              'rgb(75, 192, 192)',\r\n              'rgb(153, 102, 255)',\r\n            ],\r\n            borderWidth: 1\r\n          }]\r\n        },\r\n        usageData: {\r\n          labels: vehicleTypes,\r\n          datasets: [{\r\n            label: 'Vehicles by Type',\r\n            data: typeCounts,\r\n            backgroundColor: 'rgba(75, 192, 192, 0.5)',\r\n            borderColor: 'rgb(75, 192, 192)',\r\n            borderWidth: 1\r\n          }]\r\n        }\r\n      });\r\n      setIsLoading(false);\r\n    };\r\nloadCSVData();\r\n  }, []);\r\n\r\n  const barOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Vehicle Registration by Year',\r\n      },\r\n    },\r\n  };\r\n\r\n  const lineOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Average Electric Range by Year',},},\r\n  };\r\n  \r\n  const pieOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'right',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Vehicle Distribution by County',\r\n      },\r\n    },\r\n  };\r\n\r\n  const hourlyOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Vehicles by Type',\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Count'\r\n        }\r\n      },\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: 'Vehicle Type'\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <nav className=\"navbar\">\r\n        <div className=\"navbar-brand\">\r\n          <h1>EV Analytics Dashboard</h1>\r\n        </div>\r\n        \r\n\r\n      </nav>\r\n      \r\n      <main className=\"content\">\r\n        <section id=\"dashboard\" className=\"dashboardcont\">\r\n          <h2>EV Analytics Overview</h2>\r\n          \r\n          {isLoading ? (\r\n            <div className=\"loading-spinner\">Loading data...</div>\r\n          ) : (\r\n            <>\r\n              <div className=\"dasboardgrid single-row\">\r\n                <div className=\"dashboardcard\">\r\n                  <h3>Total Vehicles</h3>\r\n                  <p className=\"metric\">{dashboardMetrics.totalVehicleCount.toLocaleString()}</p>\r\n                  <p className=\"trend positive\">From {dashboardMetrics.totalVehicleCount} records</p>\r\n                </div>\r\n                <div className=\"dashboardcard\">\r\n                  <h3>Average Electric Range</h3>\r\n                  <p className=\"metric\">{dashboardMetrics.avgRange} miles</p>\r\n                  <p className=\"trend neutral\">Based on available data</p>\r\n                </div>\r\n                <div className=\"dashboardcard\">\r\n                  <h3>Unique Manufacturers</h3>\r\n                  <p className=\"metric\">{dashboardMetrics.uniqueMakesCount}</p>\r\n                  <p className=\"trend positive\">Different EV makers</p>\r\n                </div>\r\n                <div className=\"dashboardcard\">\r\n                  <h3>BEV vs PHEV Ratio</h3>\r\n                  <p className=\"metric\">\r\n                    {Math.round((dashboardMetrics.bevcount / (dashboardMetrics.bevcount + dashboardMetrics.phevCount)) * 100)}%\r\n                  </p>\r\n                  <p className=\"trend neutral\">{dashboardMetrics.bevcount} BEVs, {dashboardMetrics.phevCount} PHEVs</p>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"data-table-container\">\r\n                <h3>Key EV Metrics Table</h3>\r\n                <div className=\"data-table-wrapper\">\r\n                  <table className=\"data-table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Metric</th>\r\n                        <th>Value</th>\r\n                        <th>Trend</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>Total EV Population</td>\r\n                        <td>{dashboardMetrics.totalVehicleCount.toLocaleString()}</td>\r\n                        <td>Complete dataset records</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Battery Electric Vehicles (BEVs)</td>\r\n                        <td>{dashboardMetrics.bevcount.toLocaleString()}</td>\r\n                        <td>{Math.round((dashboardMetrics.bevcount / dashboardMetrics.totalVehicleCount) * 100)}% of total</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Plug-in Hybrid Vehicles (PHEVs)</td>\r\n                        <td>{dashboardMetrics.phevCount.toLocaleString()}</td>\r\n                        <td>{Math.round((dashboardMetrics.phevCount / dashboardMetrics.totalVehicleCount) * 100)}% of total</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Average Electric Range</td>\r\n                        <td>{dashboardMetrics.avgRange} miles</td>\r\n                        <td>Across all vehicle types</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Unique Manufacturers</td>\r\n                        <td>{dashboardMetrics.uniqueMakesCount}</td>\r\n                        <td>Diverse market participation</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Top County</td>\r\n                        <td>{chartData.stationData?.labels[0] || 'N/A'}</td>\r\n                        <td>{chartData.stationData?.datasets[0]?.data[0]?.toLocaleString() || 0} vehicles</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Second County</td>\r\n                        <td>{chartData.stationData?.labels[1] || 'N/A'}</td>\r\n                        <td>{chartData.stationData?.datasets[0]?.data[1]?.toLocaleString() || 0} vehicles</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>BEV to PHEV Ratio</td>\r\n                        <td>{(dashboardMetrics.bevcount / dashboardMetrics.phevCount).toFixed(2)}</td>\r\n                        <td>BEVs per PHEV</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"chartscont\">\r\n                <div className=\"chartrow\">\r\n                  <div className=\"chartwrapper half-width\">\r\n                    <Bar data={chartData.vehicleData} options={barOptions} />\r\n                    <p className=\"chartinfo\">Vehicle registrations by model year show the growth trend of electric vehicles over time, with newer models becoming increasingly popular.</p>\r\n                  </div>\r\n                  <div className=\"chartwrapper half-width\">\r\n                    <Line data={chartData.energyData} options={lineOptions} />\r\n                    <p className=\"chartinfo\">Average electric range has been steadily increasing over the years, demonstrating improvements in battery technology and addressing range anxiety concerns.</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"chartrow\">\r\n                  <div className=\"chartwrapper minichart pie-chart-container\">\r\n                    <Pie data={chartData.stationData} options={{...pieOptions, maintainAspectRatio: true}} />\r\n                    <p className=\"chartinfo\">The distribution of electric vehicles across counties shows concentration in urban areas, reflecting charging infrastructure availability and adoption patterns.</p>\r\n                  </div>\r\n                  <div className=\"chartwrapper minichart doughnut-chart-container\">\r\n                    <Doughnut data={chartData.stationData} options={{...pieOptions, maintainAspectRatio: true}} />\r\n                    <p className=\"chartinfo\">County distribution highlights potential areas for infrastructure expansion to support growing EV adoption in less represented regions.</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"chartwrapper medium-width-chart\">\r\n                  <Bar data={chartData.usageData} options={hourlyOptions} />\r\n                  <p className=\"chartinfo\">The breakdown by vehicle type shows the market share between battery electric vehicles (BEVs) and plug-in hybrid electric vehicles (PHEVs), indicating consumer preferences.</p>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </section>\r\n      </main>\r\n      \r\n      <footer className=\"footer\">\r\n      <div className=\"footertext\"><p>© 2025 EV Analytics Dashboard. All rights reserved.</p></div></footer></div>\r\n  );}\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}