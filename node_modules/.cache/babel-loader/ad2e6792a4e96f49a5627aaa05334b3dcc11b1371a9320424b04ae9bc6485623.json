{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barni\\\\OneDrive\\\\Desktop\\\\dashboard\\\\analytics-dashboard-assessment\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Bar, Line, Pie, Doughnut } from 'react-chartjs-2';\nimport Papa from 'papaparse';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  const [currentSection, setCurrentSection] = useState('dashboard');\n  const [chartData, setChartData] = useState({\n    vehicleData: null,\n    energyData: null,\n    stationData: null,\n    usageData: null\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Load and parse the CSV file\n    const loadCSVData = async () => {\n      try {\n        const response = await fetch('/data-to-visualize/Electric_Vehicle_Population_Data.csv');\n        const csvData = await response.text();\n        Papa.parse(csvData, {\n          header: true,\n          complete: results => {\n            const data = results.data.filter(row => Object.keys(row).length > 1); // Filter out empty rows\n            processData(data);\n          },\n          error: error => {\n            console.error('Error parsing CSV:', error);\n            setIsLoading(false);\n          }\n        });\n      } catch (error) {\n        console.error('Error fetching CSV:', error);\n        setIsLoading(false);\n      }\n    };\n    const processData = data => {\n      // Process vehicle registration by year\n      const vehiclesByYear = {};\n      data.forEach(row => {\n        const year = row['Model Year'];\n        if (year && !isNaN(year)) {\n          vehiclesByYear[year] = (vehiclesByYear[year] || 0) + 1;\n        }\n      });\n\n      // Sort years and get counts\n      const sortedYears = Object.keys(vehiclesByYear).sort();\n      const vehicleCounts = sortedYears.map(year => vehiclesByYear[year]);\n\n      // Process energy consumption (using Electric Range as proxy)\n      const energyByYear = {};\n      let totalVehicles = 0;\n      data.forEach(row => {\n        const year = row['Model Year'];\n        const range = parseFloat(row['Electric Range']);\n        if (year && !isNaN(year) && !isNaN(range)) {\n          if (!energyByYear[year]) {\n            energyByYear[year] = {\n              total: 0,\n              count: 0\n            };\n          }\n          energyByYear[year].total += range;\n          energyByYear[year].count += 1;\n          totalVehicles += 1;\n        }\n      });\n\n      // Calculate average energy consumption by year\n      const avgEnergyByYear = {};\n      Object.keys(energyByYear).forEach(year => {\n        avgEnergyByYear[year] = energyByYear[year].total / energyByYear[year].count;\n      });\n      const sortedEnergyYears = Object.keys(avgEnergyByYear).sort();\n      const avgEnergyCounts = sortedEnergyYears.map(year => avgEnergyByYear[year]);\n\n      // Process charging station distribution by county\n      const stationsByCounty = {};\n      data.forEach(row => {\n        const county = row['County'];\n        if (county) {\n          stationsByCounty[county] = (stationsByCounty[county] || 0) + 1;\n        }\n      });\n\n      // Get top 5 counties\n      const topCounties = Object.keys(stationsByCounty).sort((a, b) => stationsByCounty[b] - stationsByCounty[a]).slice(0, 5);\n      const countyData = topCounties.map(county => stationsByCounty[county]);\n\n      // Process usage by vehicle type\n      const usageByType = {};\n      data.forEach(row => {\n        const type = row['Electric Vehicle Type'];\n        if (type) {\n          usageByType[type] = (usageByType[type] || 0) + 1;\n        }\n      });\n      const vehicleTypes = Object.keys(usageByType);\n      const typeCounts = vehicleTypes.map(type => usageByType[type]);\n\n      // Set chart data\n      setChartData({\n        vehicleData: {\n          labels: sortedYears,\n          datasets: [{\n            label: 'Total Vehicles',\n            data: vehicleCounts,\n            backgroundColor: 'rgba(54, 162, 235, 0.5)',\n            borderColor: 'rgb(54, 162, 235)',\n            borderWidth: 1\n          }]\n        },\n        energyData: {\n          labels: sortedEnergyYears,\n          datasets: [{\n            label: 'Average Electric Range (miles)',\n            data: avgEnergyCounts,\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            borderColor: 'rgb(255, 99, 132)',\n            borderWidth: 2,\n            tension: 0.3,\n            fill: true\n          }]\n        },\n        stationData: {\n          labels: topCounties,\n          datasets: [{\n            label: 'Vehicle Distribution by County',\n            data: countyData,\n            backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)'],\n            borderColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 206, 86)', 'rgb(75, 192, 192)', 'rgb(153, 102, 255)'],\n            borderWidth: 1\n          }]\n        },\n        usageData: {\n          labels: vehicleTypes,\n          datasets: [{\n            label: 'Vehicles by Type',\n            data: typeCounts,\n            backgroundColor: 'rgba(75, 192, 192, 0.5)',\n            borderColor: 'rgb(75, 192, 192)',\n            borderWidth: 1\n          }]\n        }\n      });\n      setIsLoading(false);\n    };\n    loadCSVData();\n  }, []);\n  const barOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Vehicle Registration by Year'\n      }\n    }\n  };\n  const lineOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Average Electric Range by Year'\n      }\n    }\n  };\n  const pieOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'right'\n      },\n      title: {\n        display: true,\n        text: 'Vehicle Distribution by County'\n      }\n    }\n  };\n  const hourlyOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Vehicles by Type'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Count'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Vehicle Type'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-brand\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"EV Analytics Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"navbar-links\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#dashboard\",\n            onClick: () => setCurrentSection('dashboard'),\n            className: currentSection === 'dashboard' ? 'active' : '',\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#analytics\",\n            onClick: () => setCurrentSection('analytics'),\n            className: currentSection === 'analytics' ? 'active' : '',\n            children: \"Analytics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#reports\",\n            onClick: () => setCurrentSection('reports'),\n            className: currentSection === 'reports' ? 'active' : '',\n            children: \"Reports\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#settings\",\n            onClick: () => setCurrentSection('settings'),\n            className: currentSection === 'settings' ? 'active' : '',\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"dashboard\",\n        className: \"dashboard-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"EV Analytics Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\",\n          children: \"Loading data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Total Vehicles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metric\",\n                children: \"1,248\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"trend positive\",\n                children: \"+12% from last month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Average Charge Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metric\",\n                children: \"42 min\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"trend negative\",\n                children: \"+5% from last month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Energy Consumption\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metric\",\n                children: \"284 kWh\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"trend positive\",\n                children: \"-8% from last month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Active Stations\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"metric\",\n                children: \"89\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"trend neutral\",\n                children: \"No change\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"charts-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-wrapper half-width\",\n                children: [/*#__PURE__*/_jsxDEV(Bar, {\n                  data: chartData.vehicleData,\n                  options: barOptions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"chart-description\",\n                  children: \"Monthly vehicle registrations show consistent growth with peak registrations in summer months, indicating seasonal purchasing patterns.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-wrapper half-width\",\n                children: [/*#__PURE__*/_jsxDEV(Line, {\n                  data: chartData.energyData,\n                  options: lineOptions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"chart-description\",\n                  children: \"Energy consumption trends reveal increasing demand throughout the year with notable spikes during winter, suggesting higher charging needs in cold weather.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-wrapper small-chart\",\n                children: [/*#__PURE__*/_jsxDEV(Pie, {\n                  data: chartData.stationData,\n                  options: {\n                    ...pieOptions,\n                    maintainAspectRatio: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"chart-description\",\n                  children: \"Urban areas dominate charging station distribution, highlighting the concentration of EV infrastructure in metropolitan regions.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-wrapper small-chart\",\n                children: [/*#__PURE__*/_jsxDEV(Doughnut, {\n                  data: chartData.stationData,\n                  options: {\n                    ...pieOptions,\n                    maintainAspectRatio: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"chart-description\",\n                  children: \"The distribution pattern shows potential opportunities for expansion in rural and highway locations to improve charging accessibility.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(Bar, {\n                data: chartData.usageData,\n                options: hourlyOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"chart-description\",\n                children: \"Hourly charging activity demonstrates peak usage during morning and evening commute hours, with reduced activity overnight, reflecting typical commuter behavior.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\xA9 2025 EV Analytics Dashboard. All rights reserved.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer-links\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#privacy\",\n            children: \"Privacy Policy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#terms\",\n            children: \"Terms of Service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#contact\",\n            children: \"Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"O/7OuyDngURYja8gjKgngodaB5A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Bar","Line","Pie","Doughnut","Papa","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","register","App","_s","currentSection","setCurrentSection","chartData","setChartData","vehicleData","energyData","stationData","usageData","isLoading","setIsLoading","loadCSVData","response","fetch","csvData","text","parse","header","complete","results","data","filter","row","Object","keys","length","processData","error","console","vehiclesByYear","forEach","year","isNaN","sortedYears","sort","vehicleCounts","map","energyByYear","totalVehicles","range","parseFloat","total","count","avgEnergyByYear","sortedEnergyYears","avgEnergyCounts","stationsByCounty","county","topCounties","a","b","slice","countyData","usageByType","type","vehicleTypes","typeCounts","labels","datasets","label","backgroundColor","borderColor","borderWidth","tension","fill","barOptions","responsive","plugins","legend","position","title","display","lineOptions","pieOptions","hourlyOptions","scales","y","beginAtZero","x","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","onClick","id","options","maintainAspectRatio","_c","$RefreshReg$"],"sources":["C:/Users/barni/OneDrive/Desktop/dashboard/analytics-dashboard-assessment/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { Bar, Line, Pie, Doughnut } from 'react-chartjs-2';\r\nimport Papa from 'papaparse';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nfunction App() {\r\n  const [currentSection, setCurrentSection] = useState('dashboard');\r\n  const [chartData, setChartData] = useState({\r\n    vehicleData: null,\r\n    energyData: null,\r\n    stationData: null,\r\n    usageData: null\r\n  });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Load and parse the CSV file\r\n    const loadCSVData = async () => {\r\n      try {\r\n        const response = await fetch('/data-to-visualize/Electric_Vehicle_Population_Data.csv');\r\n        const csvData = await response.text();\r\n        \r\n        Papa.parse(csvData, {\r\n          header: true,\r\n          complete: (results) => {\r\n            const data = results.data.filter(row => Object.keys(row).length > 1); // Filter out empty rows\r\n            processData(data);\r\n          },\r\n          error: (error) => {\r\n            console.error('Error parsing CSV:', error);\r\n            setIsLoading(false);\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('Error fetching CSV:', error);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    const processData = (data) => {\r\n      // Process vehicle registration by year\r\n      const vehiclesByYear = {};\r\n      data.forEach(row => {\r\n        const year = row['Model Year'];\r\n        if (year && !isNaN(year)) {\r\n          vehiclesByYear[year] = (vehiclesByYear[year] || 0) + 1;\r\n        }\r\n      });\r\n      \r\n      // Sort years and get counts\r\n      const sortedYears = Object.keys(vehiclesByYear).sort();\r\n      const vehicleCounts = sortedYears.map(year => vehiclesByYear[year]);\r\n      \r\n      // Process energy consumption (using Electric Range as proxy)\r\n      const energyByYear = {};\r\n      let totalVehicles = 0;\r\n      data.forEach(row => {\r\n        const year = row['Model Year'];\r\n        const range = parseFloat(row['Electric Range']);\r\n        if (year && !isNaN(year) && !isNaN(range)) {\r\n          if (!energyByYear[year]) {\r\n            energyByYear[year] = { total: 0, count: 0 };\r\n          }\r\n          energyByYear[year].total += range;\r\n          energyByYear[year].count += 1;\r\n          totalVehicles += 1;\r\n        }\r\n      });\r\n      \r\n      // Calculate average energy consumption by year\r\n      const avgEnergyByYear = {};\r\n      Object.keys(energyByYear).forEach(year => {\r\n        avgEnergyByYear[year] = energyByYear[year].total / energyByYear[year].count;\r\n      });\r\n      \r\n      const sortedEnergyYears = Object.keys(avgEnergyByYear).sort();\r\n      const avgEnergyCounts = sortedEnergyYears.map(year => avgEnergyByYear[year]);\r\n      \r\n      // Process charging station distribution by county\r\n      const stationsByCounty = {};\r\n      data.forEach(row => {\r\n        const county = row['County'];\r\n        if (county) {\r\n          stationsByCounty[county] = (stationsByCounty[county] || 0) + 1;\r\n        }\r\n      });\r\n      \r\n      // Get top 5 counties\r\n      const topCounties = Object.keys(stationsByCounty)\r\n        .sort((a, b) => stationsByCounty[b] - stationsByCounty[a])\r\n        .slice(0, 5);\r\n      \r\n      const countyData = topCounties.map(county => stationsByCounty[county]);\r\n      \r\n      // Process usage by vehicle type\r\n      const usageByType = {};\r\n      data.forEach(row => {\r\n        const type = row['Electric Vehicle Type'];\r\n        if (type) {\r\n          usageByType[type] = (usageByType[type] || 0) + 1;\r\n        }\r\n      });\r\n      \r\n      const vehicleTypes = Object.keys(usageByType);\r\n      const typeCounts = vehicleTypes.map(type => usageByType[type]);\r\n      \r\n      // Set chart data\r\n      setChartData({\r\n        vehicleData: {\r\n          labels: sortedYears,\r\n          datasets: [{\r\n            label: 'Total Vehicles',\r\n            data: vehicleCounts,\r\n            backgroundColor: 'rgba(54, 162, 235, 0.5)',\r\n            borderColor: 'rgb(54, 162, 235)',\r\n            borderWidth: 1\r\n          }]\r\n        },\r\n        energyData: {\r\n          labels: sortedEnergyYears,\r\n          datasets: [{\r\n            label: 'Average Electric Range (miles)',\r\n            data: avgEnergyCounts,\r\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n            borderColor: 'rgb(255, 99, 132)',\r\n            borderWidth: 2,\r\n            tension: 0.3,\r\n            fill: true\r\n          }]\r\n        },\r\n        stationData: {\r\n          labels: topCounties,\r\n          datasets: [{\r\n            label: 'Vehicle Distribution by County',\r\n            data: countyData,\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.6)',\r\n              'rgba(54, 162, 235, 0.6)',\r\n              'rgba(255, 206, 86, 0.6)',\r\n              'rgba(75, 192, 192, 0.6)',\r\n              'rgba(153, 102, 255, 0.6)',\r\n            ],\r\n            borderColor: [\r\n              'rgb(255, 99, 132)',\r\n              'rgb(54, 162, 235)',\r\n              'rgb(255, 206, 86)',\r\n              'rgb(75, 192, 192)',\r\n              'rgb(153, 102, 255)',\r\n            ],\r\n            borderWidth: 1\r\n          }]\r\n        },\r\n        usageData: {\r\n          labels: vehicleTypes,\r\n          datasets: [{\r\n            label: 'Vehicles by Type',\r\n            data: typeCounts,\r\n            backgroundColor: 'rgba(75, 192, 192, 0.5)',\r\n            borderColor: 'rgb(75, 192, 192)',\r\n            borderWidth: 1\r\n          }]\r\n        }\r\n      });\r\n      \r\n      setIsLoading(false);\r\n    };\r\n    \r\n    loadCSVData();\r\n  }, []);\r\n\r\n  const barOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Vehicle Registration by Year',\r\n      },\r\n    },\r\n  };\r\n\r\n  const lineOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Average Electric Range by Year',\r\n      },\r\n    },\r\n  };\r\n  \r\n  const pieOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'right',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Vehicle Distribution by County',\r\n      },\r\n    },\r\n  };\r\n\r\n  const hourlyOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Vehicles by Type',\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Count'\r\n        }\r\n      },\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: 'Vehicle Type'\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <nav className=\"navbar\">\r\n        <div className=\"navbar-brand\">\r\n          <h1>EV Analytics Dashboard</h1>\r\n        </div>\r\n        \r\n        <ul className=\"navbar-links\">\r\n          <li><a href=\"#dashboard\" onClick={() => setCurrentSection('dashboard')} className={currentSection === 'dashboard' ? 'active' : ''}>Dashboard</a></li>\r\n          <li><a href=\"#analytics\" onClick={() => setCurrentSection('analytics')} className={currentSection === 'analytics' ? 'active' : ''}>Analytics</a></li>\r\n          <li><a href=\"#reports\" onClick={() => setCurrentSection('reports')} className={currentSection === 'reports' ? 'active' : ''}>Reports</a></li>\r\n          <li><a href=\"#settings\" onClick={() => setCurrentSection('settings')} className={currentSection === 'settings' ? 'active' : ''}>Settings</a></li>\r\n        </ul>\r\n      </nav>\r\n      \r\n      <main className=\"content\">\r\n        <section id=\"dashboard\" className=\"dashboard-container\">\r\n          <h2>EV Analytics Overview</h2>\r\n          \r\n          {isLoading ? (\r\n            <div className=\"loading-spinner\">Loading data...</div>\r\n          ) : (\r\n            <>\r\n              <div className=\"dashboard-grid\">\r\n                <div className=\"dashboard-card\">\r\n                  <h3>Total Vehicles</h3>\r\n                  <p className=\"metric\">1,248</p>\r\n                  <p className=\"trend positive\">+12% from last month</p>\r\n                </div>\r\n                <div className=\"dashboard-card\">\r\n                  <h3>Average Charge Time</h3>\r\n                  <p className=\"metric\">42 min</p>\r\n                  <p className=\"trend negative\">+5% from last month</p>\r\n                </div>\r\n                <div className=\"dashboard-card\">\r\n                  <h3>Energy Consumption</h3>\r\n                  <p className=\"metric\">284 kWh</p>\r\n                  <p className=\"trend positive\">-8% from last month</p>\r\n                </div>\r\n                <div className=\"dashboard-card\">\r\n                  <h3>Active Stations</h3>\r\n                  <p className=\"metric\">89</p>\r\n                  <p className=\"trend neutral\">No change</p>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"charts-container\">\r\n                <div className=\"chart-row\">\r\n                  <div className=\"chart-wrapper half-width\">\r\n                    <Bar data={chartData.vehicleData} options={barOptions} />\r\n                    <p className=\"chart-description\">Monthly vehicle registrations show consistent growth with peak registrations in summer months, indicating seasonal purchasing patterns.</p>\r\n                  </div>\r\n                  <div className=\"chart-wrapper half-width\">\r\n                    <Line data={chartData.energyData} options={lineOptions} />\r\n                    <p className=\"chart-description\">Energy consumption trends reveal increasing demand throughout the year with notable spikes during winter, suggesting higher charging needs in cold weather.</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"chart-row\">\r\n                  <div className=\"chart-wrapper small-chart\">\r\n                    <Pie data={chartData.stationData} options={{...pieOptions, maintainAspectRatio: true}} />\r\n                    <p className=\"chart-description\">Urban areas dominate charging station distribution, highlighting the concentration of EV infrastructure in metropolitan regions.</p>\r\n                  </div>\r\n                  <div className=\"chart-wrapper small-chart\">\r\n                    <Doughnut data={chartData.stationData} options={{...pieOptions, maintainAspectRatio: true}} />\r\n                    <p className=\"chart-description\">The distribution pattern shows potential opportunities for expansion in rural and highway locations to improve charging accessibility.</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"chart-wrapper\">\r\n                  <Bar data={chartData.usageData} options={hourlyOptions} />\r\n                  <p className=\"chart-description\">Hourly charging activity demonstrates peak usage during morning and evening commute hours, with reduced activity overnight, reflecting typical commuter behavior.</p>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </section>\r\n      </main>\r\n      \r\n      <footer className=\"footer\">\r\n        <div className=\"footer-content\">\r\n          <p>© 2025 EV Analytics Dashboard. All rights reserved.</p>\r\n          <div className=\"footer-links\">\r\n            <a href=\"#privacy\">Privacy Policy</a>\r\n            <a href=\"#terms\">Terms of Service</a>\r\n            <a href=\"#contact\">Contact</a>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}